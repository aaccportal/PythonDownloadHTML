<!DOCTYPE html>
<!--[if lt IE 7]><html class="ie6 ie"><![endif]--><!--[if IE 7]><html class="ie7 ie"><![endif]--><!--[if IE 8]><html class="ie8 ie"><![endif]--><!--[if IE 9]><html class="ie9 ie"><![endif]-->
<html lang="en" itemscope itemtype="https://schema.org/WebPage">

<body>
<div class="skip"><a href="#main-content">Skip to Main Content</a></div>
<div class="wrapper">
<header class="cf"><a href="/"><picture><source srcset="/cdn/computer-hope-dark.png" media="(prefers-color-scheme: dark)" class="logo"><img src="/cdn/computer-hope.jpg" width="412" height="82" alt="Computer Hope" aria-label="Computer Hope home page" class="logo"></picture></a><div itemscope itemtype="https://schema.org/SiteNavigationElement"><form action="https://www.computerhope.com/cgi-bin/search.cgi" role="search" method="post"><input class="sbar" name="q" aria-label="search" type="text" /><button type="Submit">Search</button></form><nav><ul id="nav"><li><a href="/oh.htm" title="Questions and answers, troubleshooting, and help">Help</a></li><li><a href="/tips/" title="Computer tips and tricks">Tips</a></li><li><a href="/jargon.htm" title="Computer terms, jargon, and glossary">Dictionary</a></li><li><a href="/history/" title="Computer timeline, events, and biographies">History</a></li><li><a href="/forum/" title="Computer Hope forums and community">Forums</a></li><li><a href="/contact/" title="Contact Computer Hope or other computer companies">Contact</a></li></ul></nav></div></header>
<div class="container ad" aria-hidden="true">
<ins class="adsbygoogle" data-ad-client="ca-pub-3999293766533555" data-ad-format="auto" data-ad-slot="7994873325" style="display:block"></ins>
<script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
</div>
<nav class="container" aria-label="breadcrumb"><ol class="breadcrumbs" itemscope itemtype="https://schema.org/BreadcrumbList"><li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/" itemprop="item"><span itemprop="name">Home</span></a><meta itemprop="position" content="1" /></li><li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/oh.htm" itemprop="item"><span itemprop="name">Help</span></a><meta itemprop="position" content="2" /></li><li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/unix.htm" itemprop="item"><span itemprop="name">Linux</span></a><meta itemprop="position" content="3" /></li></ol></nav>
<div class="container content" id="main-content" role="main">
<article>
<h1 itemprop="headline">Linux myisamchk command</h1>
<div class="updated">Updated: <span itemprop="dateModified" content="2021-10-11">10/11/2021</span> by <span itemprop="author publisher creator" itemscope itemtype="https://schema.org/Organization"><span itemprop="name">Computer Hope</span></span></div>
<img src="/cdn/linux/myisamchk.gif" width="300" height="300" alt="myisamchk command" class="floatRight"><p class="intro">On <a href="/jargon/u/unix-like.htm">Unix-like</a> operating systems running <a href="/jargon/m/mysql.htm">MySQL</a>, The <b>myisamchk</b> <a href="/jargon/u/utility.htm">utility</a> gets information about your MySQL <a href="/jargon/d/database.htm">database</a> tables, and checks, repairs, or optimizes them.</p>
<p>The <b>myisamchk</b> command works with MyISAM tables (tables that have .MYD and .MYI files for storing data and indexes).</p>
<div class="pagenav contents" role="navigation" aria-label="contents">
<ul>
<li><a href="#desc">Description</a></li>
<li><a href="#syntax">Syntax</a></li>
<li><a href="#examples">Examples</a></li>
<li><a href="#related">Related commands</a></li>
<li class="out"><a href="/unix.htm">Linux commands help</a></li>
</ul>
</div>
<h2 id="desc">Description</h2>
<p class="tab">The options specify what you want <b>myisamchk</b> to do. They are described in the following sections. You can also get a list of options by running <b>myisamchk --help</b>.</p>
<div class="tip tab" role="note">
<span class="title note">Note</span>
<p>It is best to make a <a href="/jargon/b/backup.htm">backup</a> of a table before performing a table repair operation. Under some circumstances, the operation might cause data loss. Possible causes include, but are not limited to, <a href="/jargon/f/filesyst.htm">file system</a> errors.</p>
</div>
<p class="tab">With no options, <b>myisamchk</b> checks your table as the default operation. To get more information or tell <b>myisamchk</b> to take corrective action, specify the appropriate options.</p>
<p class="tab">The <i>tbl_name</i> is the database table you want to check or repair. If you run <b>myisamchk</b> somewhere other than the database <a href="/jargon/d/director.htm">directory</a>, you must specify the <a href="/jargon/p/path.htm">path</a> to the database directory, because <b>myisamchk</b> has no idea where the database is located. In fact, <b>myisamchk</b> does not actually care whether the files you are working on are located in a database directory. You can copy the files that correspond to a database table into some other location and perform recovery operations on them there.</p>
<p class="tab">You can name several tables on the <b>myisamchk</b> command line if you want. You can also specify a table by naming its index file (the file with the .MYI suffix). This enables you to specify all tables in a directory using the pattern *.MYI. For example, if you are in a database directory, you can check all the MyISAM tables in that directory like this:</p>
<pre class="tab tcy">myisamchk *.MYI</pre>
<p class="tab">If you are not in the database directory, you can check all the tables there by specifying the path to the directory:</p>
<pre class="tab tcy">myisamchk /path/to/database_dir/*.MYI</pre>
<p class="tab">You can even check all tables in all databases by specifying a <a href="/jargon/w/wildcard.htm">wildcard</a> with the path to the MySQL data directory:</p>
<pre class="tab tcy">myisamchk /path/to/datadir/*/*.MYI</pre>
<p class="tab">The recommended way to quickly check all MyISAM tables is:</p>
<pre class="tab tcy">myisamchk --silent --fast /path/to/datadir/*/*.MYI</pre>
<p class="tab">If you want to check all MyISAM tables and repair any that are corrupted, you can use the following command:</p>
<pre class="tab tcy">myisamchk --silent --force --fast --update-state 
          --key_buffer_size=64M --myisam_sort_buffer_size=64M 
          --read_buffer_size=1M --write_buffer_size=1M 
          /path/to/datadir/*/*.MYI</pre>
<p class="tab">This command assumes the system has more than 64 <a href="/jargon/m/megabyte.htm">MB</a> free. For more information about <a href="/jargon/m/memory.htm">memory</a> allocation with <b>myisamchk</b>, see the section called &quot;MYISAMCHK MEMORY USAGE&quot;.</p>
<p class="tab">For additional information about using <b>myisamchk</b>, see <i>Section 7.6</i>, &quot;MyISAM Table Maintenance and Crash Recovery&quot;.</p>
<p class="tab"><b>Important:</b> You must ensure that no other program is using the tables while you are running <b>myisamchk</b>. The most effective means of doing so is to shut down the MySQL <a href="/jargon/s/server.htm">server</a> while running <b>myisamchk</b>, or lock all tables that <b>myisamchk</b> is using.</p>
<p class="tab">Otherwise, when you run <b>myisamchk</b>, it may display the following error message:</p>
<pre class="tab">warning: clients are using or haven't closed the table properly</pre>
<p class="tab">This error means another program, such as the <b>mysqld</b> server, updated the table you're trying to check, and the program hasn't closed the file or died without closing the file properly, which can sometimes lead to the <a href="/jargon/c/corrupt.htm">corruption</a> of one or more MyISAM tables.</p>
<p class="tab">If <b>mysqld</b> is running, you must force it to flush any table modifications that are still buffered in memory using FLUSH TABLES. Then ensure that no one is using the tables while you are running <b>myisamchk</b>. However, the easiest way to avoid this problem is to use CHECK TABLE instead of <b>myisamchk</b> to check tables.</p>
<h2 id="syntax">Syntax</h2>
<pre class="tcy tab">myisamchk [<i>options</i>] <i>tbl_name</i> ...</pre>
<h3 class="tab">Options</h3>
<p class="tab">The options described in this section can be used for any table maintenance operation performed by <b>myisamchk</b>. The sections following this one describe options that pertain only to specific operations, such as table checking or repairing.</p>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:250px"><b>--help, -?</b></td>
<td>Display a help message and exit. Options are grouped by type of operation.</td>
</tr>
<tr class="tcw">
<td><b>--HELP, -H</b></td>
<td>Display a help message and exit. Options are presented in a single list.</td>
</tr>
<tr class="tcw">
<td><b>--debug=debug_options,</b><br> <b>-#</b> <i>debug_options</i></td>
<td>Write a <a href="/jargon/d/debug.htm">debugging</a> log. A typical debug_options string is '<b>d:t:o,file_name</b>'. The default is '<b>d:t:o,/tmp/myisamchk.trace</b>'.</td>
</tr>
<tr class="tcw">
<td><b>--silent, -s</b></td>
<td>Silent mode. Write output only when errors occur. You can use <b>-s</b> twice (<b>-ss</b>) to make <b>myisamchk</b> very silent.</td>
</tr>
<tr class="tcw">
<td><b>--verbose, -v</b></td>
<td><a href="/jargon/v/verbose.htm">Verbose</a> mode. Print more information about what the program does. This can be used with <b>-d</b> and <b>-e</b>. Use <b>-v</b> multiple times (<b>-vv</b>, <b>-vvv</b>) for even more output.</td>
</tr>
<tr class="tcw">
<td><b>--version, -V</b></td>
<td>Display <a href="/jargon/v/version.htm">version</a> information and exit.</td>
</tr>
<tr class="tcw">
<td><b>--wait, -w</b></td>
<td>Instead of <a href="/jargon/t/terminat.htm">terminating</a> with an error if the table is locked, wait until the table is unlocked before continuing. If you are running mysqld with external locking disabled, the table can be locked only by another <b>myisamchk</b> command.</td>
</tr>
</table>
<p class="tab">You can also set the following <a href="/jargon/v/variable.htm">variables</a> using <b>--var_name=value syntax:</b></p>
<table class="mtable3 tab">
<tr class="tcw">
<th><b>variable</b></th>
<th><b>default value</b></th>
</tr>
<tr class="tcw">
<td>decode_bits</td>
<td>9</td>
</tr>
<tr class="tcw">
<td>ft_max_word_len</td>
<td>version-dependent</td>
</tr>
<tr class="tcw">
<td>ft_min_word_len</td>
<td>4</td>
</tr>
<tr class="tcw">
<td>ft_stopword_file</td>
<td>built-in list</td>
</tr>
<tr class="tcw">
<td>key_buffer_size</td>
<td>523264</td>
</tr>
<tr class="tcw">
<td>myisam_block_size</td>
<td>1024</td>
</tr>
<tr class="tcw">
<td>myisam_sort_key_blocks</td>
<td>16</td>
</tr>
<tr class="tcw">
<td>read_buffer_size</td>
<td>262136</td>
</tr>
<tr class="tcw">
<td>sort_buffer_size</td>
<td>2097144</td>
</tr>
<tr class="tcw">
<td>sort_key_blocks</td>
<td>16</td>
</tr>
<tr class="tcw">
<td>stats_method</td>
<td>nulls_unequal</td>
</tr>
<tr class="tcw">
<td>write_buffer_size</td>
<td>262136</td>
</tr>
</table>
<p class="tab">The possible <b>myisamchk</b> variables and their default values can be examined with <b>myisamchk --help</b>:</p>
<p class="tab"><b>sort_buffer_size</b> is used when the keys are repaired by <a href="/jargon/s/sort.htm">sorting</a> keys, which is the normal case when you use <b>--recover</b>. As of MySQL 5.5.29, myisam_sort_buffer_size is available as an alternative name to <b>sort_buffer_size</b>. <b>myisam_sort_buffer_size</b> is preferable to <b>sort_buffer_size</b> because its name corresponds to the <b>myisam_sort_buffer_size</b> server system variable with a similar meaning. <b>sort_buffer_size</b> should be considered deprecated.</p>
<p class="tab"><b>key_buffer_size</b> is used when you are checking the table with <b>--extend-check</b>, or when the keys are repaired by inserting keys row by row into the table (like when doing normal inserts). Repairing through the key buffer is used in the following cases:</p>
<ul>
<li>You use <b>--safe-recover</b>.</li>
<li>The <a href="/jargon/t/tempfile.htm">temporary files</a> needed to sort the keys would be more than twice as big as when creating the key file directly. This is often the case when you have large key values for <b>CHAR</b>, <b>VARCHAR</b>, or <b>TEXT</b> columns, because the sort operation needs to store the complete key values as it proceeds. If you have lots of temporary space and you can force <b>myisamchk</b> to repair by sorting, you can use the <b>--sort-recover</b> option.</li>
</ul>
<p class="tab">Repairing through the key buffer takes much less <a href="/jargon/d/diskcapa.htm">disk space</a> than using sorting, but is also much slower.</p>
<p class="tab">If you want a faster repair, set the <b>key_buffer_size</b> and <b>myisam_sort_buffer_size</b> variables to about 25% of your available memory. You can set both variables to large values, because only one of them is used at a time.</p>
<p class="tab"><b>myisam_block_size</b> is the size used for index blocks.</p>
<p class="tab"><b>stats_method</b> influences how NULL values are treated for index statistics collection when the <b>--analyze</b> option is given. It acts like the <b>myisam_stats_method</b> system variable.</p>
<p class="tab"><b>ft_min_word_len</b> and <b>ft_max_word_len</b> indicate the minimum and maximum <a href="/jargon/w/word.htm">word</a> length for FULLTEXT indexes. <b>ft_stopword_file</b> names the stopword file. These need to be set under the following circumstances:</p>
<p class="tab">If you use <b>myisamchk</b> to perform an operation that modifies table indexes (such as repair or analyze), the FULLTEXT indexes are rebuilt using the default full-text parameter values for minimum and maximum word length and the stopword file unless you specify otherwise. This can result in <a href="/jargon/q/query.htm">queries</a> failing.</p>
<p class="tab">The problem occurs because these parameters are known only by the server. They are not stored in MyISAM index files. To avoid the problem if you have modified the minimum or maximum word length or the stopword file in the server, specify the same <b>ft_min_word_len</b>, <b>ft_max_word_len</b>, and <b>ft_stopword_file</b> values to <b>myisamchk</b> you use for <b>mysqld</b>. For example, if you have set the minimum word length to <b>3</b>, you can repair a table with <b>myisamchk</b> like this:</p>
<pre class="tab tcy">myisamchk --recover --ft_min_word_len=3 tbl_name.MYI</pre>
<p class="tab">To ensure that <b>myisamchk</b> and the server use the same values for full-text parameters, you can place each one in both the [mysqld] and [myisamchk] sections of an option file:</p>
<pre class="tab">[mysqld]
ft_min_word_len=3
[myisamchk]
ft_min_word_len=3</pre>
<p class="tab">An alternative to using <b>myisamchk</b> is to use the <b>REPAIR TABLE</b>, <b>ANALYZE TABLE</b>, <b>OPTIMIZE TABLE</b>, or <b>ALTER TABLE</b>. These statements are performed by the server, which knows the proper full-text parameter values to use.</p>
<h3 class="tab">&quot;Check&quot; Options</h3>
<p class="tab"><b>myisamchk</b> supports the following options for table checking operations:</p>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:230px"><b>--check, -c</b></td>
<td>Check the table for errors. This is the default operation if you specify no option that selects an operation type explicitly.</td>
</tr>
<tr class="tcw">
<td><b>--check-only-changed,<br> -C</b></td>
<td>Check only tables that have changed since the last check.</td>
</tr>
<tr class="tcw">
<td><b>--extend-check, -e</b></td>
<td>Check the table very thoroughly. This is quite slow if the table has many indexes. This option should only be used in extreme cases. Normally, <b>myisamchk</b> or <b>myisamchk --medium-check</b> should be able to determine whether there are any errors in the table.<br><br> If you are using <b>--extend-check</b> and have plenty of memory, setting the <b>key_buffer_size</b> variable to a large value helps the repair operation run faster.<br><br> See also the description of this option under table repair options.<br><br> For a description of the output format, see the section called &quot;OBTAINING TABLE INFORMATION WITH MYISAMCHK.&quot;</td>
</tr>
<tr class="tcw">
<td><b>--fast, -F</b></td>
<td>Check only tables that haven't been closed properly.</td>
</tr>
<tr class="tcw">
<td><b>--force, -f</b></td>
<td>Do a repair operation automatically if <b>myisamchk</b> finds any errors in the table. The repair type is the same as that specified with the <b>--recover</b> or <b>-r</b> option.</td>
</tr>
<tr class="tcw">
<td><b>--information, -i</b></td>
<td>Print informational statistics about the table that is checked.</td>
</tr>
<tr class="tcw">
<td><b>--medium-check, -m</b></td>
<td>Do a check that is faster than an <b>--extend-check</b> operation. This finds only 99.99% of all errors, which should be good enough in most cases.</td>
</tr>
<tr class="tcw">
<td><b>--read-only, -T</b></td>
<td>Do not mark the table as checked. This is useful if you use <b>myisamchk</b> to check a table that is in use by some other application that does not use locking, such as <b>mysqld</b> when run with external locking disabled.</td>
</tr>
<tr class="tcw">
<td><b>--update-state, -U</b></td>
<td>Store information in the .MYI file to indicate when the table was checked and whether the table crashed. This should be used to get full benefit of the <b>--check-only-changed</b> option, but you shouldn't use this option if the mysqld server is using the table and you are running it with external locking disabled.</td>
</tr>
</table>
<h3 class="tab">&quot;Repair&quot; Options</h3>
<p class="tab"><b>myisamchk</b> supports the following options for table repair operations (operations performed when an option such as <b>--recover</b> or <b>--safe-recover</b> is given):</p>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:260px"><b>--backup, -B</b></td>
<td>Make a backup of the .MYD file as <b>file_name-time.BAK</b>.</td>
</tr>
<tr class="tcw">
<td><b>--character-sets-dir=</b><i>path</i></td>
<td>The directory where <a href="/jargon/c/charcode.htm">character sets</a> are installed.</td>
</tr>
<tr class="tcw">
<td><b>--correct-checksum</b></td>
<td>Correct the <a href="/jargon/c/checksum.htm">checksum</a> information for the table.</td>
</tr>
<tr class="tcw">
<td><b>--data-file-length=</b><i>len</i>,<br><b>-D</b> <i>len</i></td>
<td>The maximum length of the data file (when re-creating data file when it is &quot;full&quot;).</td>
</tr>
<tr class="tcw">
<td><b>--extend-check, -e</b></td>
<td>Do a repair that tries to recover every possible row from the data file. Normally, this also finds a lot of garbage rows. Do not use this option unless you are desperate. See also the description of this option under table checking options. For a description of the output format, see the section called &quot;OBTAINING TABLE INFORMATION WITH MYISAMCHK.&quot;</td>
</tr>
<tr class="tcw">
<td><b>--force, -f</b></td>
<td>Overwrite old intermediate files (files with names like <b>tbl_name.TMD</b>) instead of aborting.</td>
</tr>
<tr class="tcw">
<td><b>--keys-used=</b><i>val</i>,<br><b>-k</b> <i>val</i></td>
<td>For <b>myisamchk</b>, the option value is a bit-value that indicates which indexes to update. Each binary bit of the option value corresponds to a table index, where the first index is bit 0. An option value of 0 disables updates to all indexes, which can get faster inserts. Deactivated indexes can be reactivated using <b>myisamchk</b> <b>-r</b>.</td>
</tr>
<tr class="tcw">
<td><b>--no-symlinks, -l</b></td>
<td>Do not follow <a href="/jargon/s/symblink.htm">symbolic links</a>. Normally <b>myisamchk</b> repairs the table that a symlink points to. This option does not exist as of MySQL 4.0 because versions from 4.0 on do not remove symlinks during repair operations.</td>
</tr>
<tr class="tcw">
<td><b>--max-record-length=</b><i>len</i></td>
<td>Skip rows larger than the given length if <b>myisamchk</b> cannot allocate memory to hold them.</td>
</tr>
<tr class="tcw">
<td><b>--parallel-recover, -p</b></td>
<td>Use the same technique as <b>-r</b> and <b>-n</b>, but create all the keys in parallel, using different threads. This is beta-quality code. Use at your own risk!</td>
</tr>
<tr class="tcw">
<td><b>--quick, -q</b></td>
<td>Achieve a faster repair by modifying only the index file, not the data file. You can specify this option twice to force <b>myisamchk</b> to modify the original data file in case of duplicate keys.</td>
</tr>
<tr class="tcw">
<td><b>--recover, -r</b></td>
<td>Do a repair that fixes almost any problem except unique keys that are not unique (which is an extremely unlikely error with MyISAM tables). If you want to recover a table, this is the option to try first. Try <b>--safe-recover</b> only if <b>myisamchk</b> reports the table cannot be recovered using <b>--recover</b>. In the unlikely case that <b>--recover</b> fails, the data file remains intact. If you have lots of memory, increase the value of <b>myisam_sort_buffer_size</b>.</td>
</tr>
<tr class="tcw">
<td><b>--safe-recover, -o</b></td>
<td>Do a repair using an old recovery method that reads through all rows in order and updates all index trees based on the rows found. This is an order of magnitude slower than <b>--recover</b>, but can handle a few very unlikely cases that <b>--recover</b> cannot. This recovery method also uses much less disk space than <b>--recover</b>. Normally, repair first using <b>--recover</b>, and then with <b>--safe-recover</b> only if <b>--recover</b> fails.<br><br> If you have lots of memory, increase the value of <b>key_buffer_size</b>.</td>
</tr>
<tr class="tcw">
<td><b>--set-character-set=</b><i>name</i></td>
<td>Change the character set used by the table indexes. This option was replaced by <b>--set-collation</b> in MySQL 5.0.3.</td>
</tr>
<tr class="tcw">
<td><b>--set-collation=</b><i>name</i></td>
<td>Specify the collation to use for sorting table indexes. The character set name is implied by the first part of the collation name.</td>
</tr>
<tr class="tcw">
<td><b>--sort-recover, -n</b></td>
<td>Force <b>myisamchk</b> to use sorting to resolve the keys even if the temporary files would be very large.</td>
</tr>
<tr class="tcw">
<td><b>--tmpdir=</b><i>path</i>, <b>-t</b> <i>path</i></td>
<td>The path of the directory to be used for storing temporary files. If this is not set, <b>myisamchk</b> uses the value of the <b>TMPDIR</b> <a href="/jargon/e/envivari.htm">environment variable</a>. <b>--tmpdir</b> can be set to a list of directory paths used successively in round-robin fashion for creating temporary files. The separator character between directory names is the colon (&quot;<b>:</b>&quot;) on Unix and the semicolon (&quot;<b>;</b>&quot;) on Windows.</td>
</tr>
<tr class="tcw">
<td><b>--unpack, -u</b></td>
<td>Unpack a table that was packed with myisampack.</td>
</tr>
</table>
<h3 class="tab">Other Options</h3>
<p class="tab"><b>myisamchk</b> supports the following options for actions other than table checks and repairs:</p>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:300px"><b>--analyze, -a</b></td>
<td>Analyze the distribution of key values. This improves join performance by enabling the join optimizer to better choose the order to join the tables and which indexes it should use. To obtain information about the key distribution, use a <b>myisamchk --description --verbose tbl_name</b> command or the <b>SHOW INDEX FROM tbl_name</b> statement.</td>
</tr>
<tr class="tcw">
<td><b>--block-search=</b><i>offset</i>,<br><b>-b</b> <i>offset</i></td>
<td>Find the record that belongs to a block at the given offset.</td>
</tr>
<tr class="tcw">
<td><b>--description, -d</b></td>
<td>Print some descriptive information about the table. Specifying the <b>--verbose</b> option once or twice produces additional information. See the section called &quot;OBTAINING TABLE INFORMATION WITH MYISAMCHK.&quot;</td>
</tr>
<tr class="tcw">
<td><b>--set-auto-increment</b>[<b>=</b><i>value</i>],<br> <b>-A</b>[<i>value</i>]</td>
<td>Force AUTO_INCREMENT numbering for new records to start at the given value (or higher, if there are existing records with AUTO_INCREMENT values this large). If value is not specified, AUTO_INCREMENT numbers for new records begin with the largest value currently in the table, plus one.</td>
</tr>
<tr class="tcw">
<td><b>--sort-index, -S</b></td>
<td>Sort the index tree blocks in high-low order. This optimizes seeks and makes table scans that use indexes faster.</td>
</tr>
<tr class="tcw">
<td><b>--sort-records=</b><i>N</i>, <b>-R</b> <i>N</i></td>
<td>Sort records according to a particular index. This makes your data much more localized and may speed up range-based SELECT and ORDER BY operations that use this index. The first time you use this option to sort a table, it may be very slow. To determine a table's index numbers, use <b>SHOW INDEX</b>, which displays a table's indexes in the same order that <b>myisamchk</b> sees them. Indexes are numbered beginning with 1.<br><br> If keys are not packed (PACK_KEYS=0), they have the same length, so when <b>myisamchk</b> sorts and moves records, it overwrites record offsets in the index. If keys are packed (PACK_KEYS=1), <b>myisamchk</b> must unpack key blocks first, then re-create indexes and pack the key blocks again. In this instance, re-creating indexes is faster than updating offsets for each index.</td>
</tr>
</table>
<h3 class="tab">Obtaining table information</h3>
<p class="tab">To obtain a description of a MyISAM table or statistics about it, use the commands shown here. The output from these commands is explained later in this section.</p>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:150px"><b>-d</b> <i>tbl_name</i></td>
<td>Runs <b>myisamchk</b> in &quot;describe mode&quot; to produce a description of your table. If you start the MySQL server with external locking disabled, <b>myisamchk</b> may report an error for a table that is updated while it runs. However, because <b>myisamchk</b> does not change the table in describe mode, there is no risk of destroying data.</td>
</tr>
<tr class="tcw">
<td><b>-dv</b> <i>tbl_name</i></td>
<td>Adding <b>-v</b> runs <b>myisamchk</b> in verbose mode so that it produces more information about the table. Adding <b>-v</b> a second time produces even more information.</td>
</tr>
<tr class="tcw">
<td><b>-eis</b> <i>tbl_name</i></td>
<td>Shows only the most important information from a table. This operation is slow because it must read the entire table.</td>
</tr>
<tr class="tcw">
<td><b>-eiv</b> <i>tbl_name</i></td>
<td>This is like <b>-eis</b>, but tells you what is being done.</td>
</tr>
</table>
<p class="tab">The <b>tbl_name</b> argument can be the name of a MyISAM table or the name of its index file. Multiple <b>tbl_name</b> arguments can be given.</p>
<p class="tab">Suppose a table named person has the following structure. The <b>MAX_ROWS</b> table option is included so that in the example output from <b>myisamchk</b> shown later, some values are smaller and fit the output format more easily.</p>
<pre class="tab">CREATE TABLE person
(
  id         INT NOT NULL AUTO_INCREMENT,
  last_name  VARCHAR(20) NOT NULL,
  first_name VARCHAR(20) NOT NULL,
  birth      DATE,
  death      DATE,
  PRIMARY KEY (id),
  INDEX (last_name, first_name),
  INDEX (birth)
) MAX_ROWS = 1000000;</pre>
<p class="tab">Suppose also the table has these data and index file sizes:</p>
<pre class="tab">-rw-rw----  1 mysql  mysql  9347072 Aug 19 11:47 person.MYD
-rw-rw----  1 mysql  mysql  6066176 Aug 19 11:47 person.MYI</pre>
<p class="tab">Example of <b>myisamchk -dvv</b> output:</p>
<pre class="tab">MyISAM file:         person
Record format:       Packed
Character set:       latin1_swedish_ci (8)
File-version:        1
Creation time:       2009-08-19 16:47:41
Recover time:        2009-08-19 16:47:56
Status:              checked,analyzed,optimized keys
Auto increment key:              1  Last value:                306688
Data records:               306688  Deleted blocks:                 0
Datafile parts:             306688  Deleted data:                   0
Datafile pointer (bytes):        4  Keyfile pointer (bytes):        3
Datafile length:           9347072  Keyfile length:           6066176
Max datafile length:    4294967294  Max keyfile length:   17179868159
Recordlength:                   54
table description:
Key Start Len Index   Type                 Rec/key         Root  Blocksize
1   2     4   unique  long                       1        99328       1024
2   6     20  multip. varchar prefix           512      3563520       1024
27        20          varchar                  512
3   48    3   multip. uint24 NULL           306688      6065152       1024
Field Start Length Nullpos Nullbit Type
1     1     1
2     2     4                      no zeros
3     6     21                     varchar
4     27    21                     varchar
5     48    3      1       1       no zeros
6     51    3      1       2       no zeros</pre>
<p class="tab">Explanations for the types of information <b>myisamchk</b> produces are given here. &quot;Keyfile&quot; refers to the index file. &quot;Record&quot; and &quot;row&quot; are synonymous, as are &quot;field&quot; and &quot;column.&quot;</p>
<p class="tab">The initial part of the table description contains these values:</p>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:200px"><b>MyISAM file</b></td>
<td>Name of the MyISAM (index) file.</td>
</tr>
<tr class="tcw">
<td><b>Record format</b></td>
<td>The format used to store table rows. The preceding examples use Fixed length. Other possible values are Compressed and Packed. Packed corresponds to what SHOW TABLE STATUS reports as <i>Dynamic</i>.</td>
</tr>
<tr class="tcw">
<td><b>Chararacter set</b></td>
<td>The table default character set.</td>
</tr>
<tr class="tcw">
<td><b>File-version</b></td>
<td>Version of MyISAM format. Currently, always 1.</td>
</tr>
<tr class="tcw">
<td><b>Creation time</b></td>
<td>When the data file was created.</td>
</tr>
<tr class="tcw">
<td><b>Recover time</b></td>
<td>When the index/data file was last reconstructed.</td>
</tr>
<tr class="tcw">
<td><b>Status</b></td>
<td>Table status flags. Possible values are crashed, open, changed, analyzed, optimized keys, and sorted index pages.</td>
</tr>
<tr class="tcw">
<td><b>Auto increment key, Last value</b></td>
<td>The key number associated the table's AUTO_INCREMENT column, and the most recently generated value for this column. These fields do not appear if there is no such column.</td>
</tr>
<tr class="tcw">
<td><b>Data records</b></td>
<td>The number of rows in the table.</td>
</tr>
<tr class="tcw">
<td><b>Deleted blocks</b></td>
<td>How many deleted blocks still have reserved space. You can optimize your table to minimize this space. See Section 7.6.4, &quot;MyISAM Table Optimization&quot;.</td>
</tr>
<tr class="tcw">
<td><b>Datafile parts</b></td>
<td>For dynamic-row format, this indicates how many data blocks there are. For an optimized table without fragmented rows, this is the same as Data records.</td>
</tr>
<tr class="tcw">
<td><b>Deleted data</b></td>
<td>How many <a href="/jargon/b/byte.htm">bytes</a> of unreclaimed deleted data there are. You can optimize your table to minimize this space.</td>
</tr>
<tr class="tcw">
<td><b>Datafile pointer</b></td>
<td>The size of the data file pointer, in bytes. It is usually <b>2</b>, <b>3</b>, <b>4</b>, or <b>5</b> bytes. Most tables manage with 2 bytes, but this cannot be controlled from MySQL yet. For fixed tables, this is a row address. For dynamic tables, this is a byte address.</td>
</tr>
<tr class="tcw">
<td><b>Keyfile pointer</b></td>
<td>The size of the index file pointer, in bytes. It is usually <b>1</b>, <b>2</b>, or <b>3</b> bytes. Most tables manage with 2 bytes, but this is calculated automatically by MySQL. It is always a block address.</td>
</tr>
<tr class="tcw">
<td><b>Max datafile length</b></td>
<td>How long the table data file can become, in bytes.</td>
</tr>
<tr class="tcw">
<td><b>Max keyfile length</b></td>
<td>How long the table index file can become, in bytes.</td>
</tr>
<tr class="tcw">
<td><b>Recordlength</b></td>
<td>How much space each row takes, in bytes.</td>
</tr>
</table>
<p class="tab">The table description part of the output includes a list of all keys in the table. For each key, <b>myisamchk</b> displays some low-level information:</p>
<table class="mtable3 tab">
<tr class="tcw">
<td style="width:100px"><b>Key</b></td>
<td>This key's number. This value is shown only for the first column of the key. If this value is missing, the line corresponds to the second or later column of a multiple-column key. For the table shown in the example, there are two table description lines for the second index. This indicates that it is a multiple-part index with two parts.</td>
</tr>
<tr class="tcw">
<td><b>Start</b></td>
<td>Where in the row this portion of the index starts.</td>
</tr>
<tr class="tcw">
<td><b>Len</b></td>
<td>How long this portion of the index is. For packed numbers, this should always be the full length of the column. For strings, it may be shorter than the full length of the indexed column, because you can index a prefix of a string column. The total length of a multiple-part key is the sum of the Len values for all key parts.</td>
</tr>
<tr class="tcw">
<td><b>Index</b></td>
<td>Whether a key value can exist multiple times in the index. Possible values are <b>unique</b> or <b>multip</b>. (multiple).</td>
</tr>
<tr class="tcw">
<td><b>Type</b></td>
<td>What data type this portion of the index has. This is a MyISAM data type with the possible values packed, stripped, or empty.</td>
</tr>
<tr class="tcw">
<td><b>Root</b></td>
<td>Address of the root index block.</td>
</tr>
<tr class="tcw">
<td><b>Blocksize</b></td>
<td>The size of each index block. By default, this is <b>1024</b>, but the value may be changed at compile time when MySQL is built from source.</td>
</tr>
<tr class="tcw">
<td><b>Rec/key</b></td>
<td>This is a statistical value used by the optimizer. It tells how many rows there are per value for this index. A unique index always has a value of 1. This may be updated after a table is loaded (or greatly changed) with <b>myisamchk</b> <b>-a</b>. If this is not updated at all, a default value of <b>30</b> is given.</td>
</tr>
</table>
<p class="tab">The last part of the output provides information about each column:</p>
<table class="mtable3 tab">
<tr class="tcw">
<td style="width:130px"><b>Field</b></td>
<td>The column number.</td>
</tr>
<tr class="tcw">
<td><b>Start</b></td>
<td>The byte position of the column within table rows.</td>
</tr>
<tr class="tcw">
<td><b>Length</b></td>
<td>The length of the column in bytes.</td>
</tr>
<tr class="tcw">
<td><b>Nullpos, Nullbit</b></td>
<td>For columns that can be <a href="/jargon/n/null.htm">NULL</a>, MyISAM stores NULL values as a flag in a byte. Depending on how many nullable columns there are, there can be one or more bytes used for this purpose. The <b>Nullpos</b> and <b>Nullbit</b> values, if nonempty, indicate which byte and bit contains that flag indicating whether the column is NULL.<br><br> The position and number of bytes used to store NULL flags is shown in the line for field 1. This is why there are six <i>Field</i> lines for the person table even though it has only five columns.</td>
</tr>
<tr class="tcw">
<td><b>Type</b></td>
<td>The data type. The value may contain any of the following descriptors:<br><br><b>constant</b><br><br> All rows have the same value.<br><br><b>no endspace</b><br><br> Do not store endspace.<br><br><b>no endspace, not_always</b><br><br> Do not store endspace and do not do endspace <a href="/jargon/c/compress.htm">compression</a> for all values.<br><br><b>no endspace, no empty</b><br><br> Do not store endspace. Do not store empty values.<br><br><b>table-lookup</b><br><br> The column was converted to an ENUM.<br><br><b>zerofill(N)</b><br><br> The most significant N bytes in the value are always 0 and are not stored.<br><br><b>no zeros</b><br><br> Do not store zeros.<br><br><b>always zero</b><br><br> Zero values are stored using one bit.</td>
</tr>
<tr class="tcw">
<td><b>Huff tree</b></td>
<td>The number of the <a href="/people/david_huffman.htm">Huffman</a> tree associated with the column.</td>
</tr>
<tr class="tcw">
<td><b>Bits</b></td>
<td>The number of bits used in the Huffman tree.</td>
</tr>
</table>
<p class="tab">The Huff tree and Bits fields are displayed if the table was compressed with <b>myisampack</b>. See <b>myisampack</b>, for an example of this information. Example of <b>myisamchk -eiv</b> output:</p>
<pre class="tab">Checking MyISAM file: person
Data records:  306688   Deleted blocks:       0
- check file-size
- check record delete-chain
No recordlinks
- check key delete-chain
block_size 1024:
- check index reference
- check data record references index: 1
Key:  1:  Keyblocks used:  98%  Packed:    0%  Max levels:  3
- check data record references index: 2
Key:  2:  Keyblocks used:  99%  Packed:   97%  Max levels:  3
- check data record references index: 3
Key:  3:  Keyblocks used:  98%  Packed:  -14%  Max levels:  3
Total:    Keyblocks used:  98%  Packed:   89%
- check records and index references*** LOTS OF ROW NUMBERS DELETED ***
Records:            306688  M.recordlength:       25  Packed:            83%
Recordspace used:       97% Empty space:           2% Blocks/Record:   1.00
Record blocks:      306688  Delete blocks:         0
Record data:       7934464  Deleted data:          0
Lost space:         256512  Linkdata:        1156096
User time 43.08, System time 1.68
Maximum resident set size 0, Integral resident set size 0
Non-physical pagefaults 0, Physical pagefaults 0, Swaps 0
Blocks in 0 out 7, Messages in 0 out 0, Signals 0
Voluntary context switches 0, Involuntary context switches 0
Maximum memory usage: 1046926 bytes (1023k)</pre>
<p class="tab"><b>myisamchk -eiv</b> output includes the following information:</p>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:190px"><b>Data records</b></td>
<td>The number of rows in the table.</td>
</tr>
<tr class="tcw">
<td><b>Deleted blocks</b></td>
<td>How many deleted blocks still have reserved space. You can optimize your table to minimize this space.</td>
</tr>
<tr class="tcw">
<td><b>Key</b></td>
<td>The key number.</td>
</tr>
<tr class="tcw">
<td><b>Keyblocks used</b></td>
<td>What percentage of the keyblocks are used. When a table has recently been reorganized with <b>myisamchk</b>, the values are very high (very near theoretical maximum).</td>
</tr>
<tr class="tcw">
<td><b>Packed</b></td>
<td>MySQL tries to pack key values with a common <a href="/jargon/s/suffix.htm">suffix</a>. This can only be used for indexes on <b>CHAR</b> and <b>VARCHAR</b> columns. For long indexed <a href="/jargon/s/string.htm">strings</a> that have similar leftmost parts, this can significantly reduce the space used. In the preceding example, the second key is 40 bytes long and a 97% reduction in space is achieved.</td>
</tr>
<tr class="tcw">
<td><b>Max levels</b></td>
<td>How deep the B-tree for this key is. Large tables with long key values get high values.</td>
</tr>
<tr class="tcw">
<td><b>Records</b></td>
<td>How many rows are in the table.</td>
</tr>
<tr class="tcw">
<td><b>M.recordlength</b></td>
<td>The average row length. This is the exact row length for tables with fixed-length rows, because all rows have the same length.</td>
</tr>
<tr class="tcw">
<td><b>Packed</b></td>
<td>MySQL strips spaces from the end of strings. The <i>Packed</i> value indicates the percentage of savings achieved by doing this.</td>
</tr>
<tr class="tcw">
<td><b>Recordspace used</b></td>
<td>What percentage of the data file is used.</td>
</tr>
<tr class="tcw">
<td><b>Empty space</b></td>
<td>What percentage of the data file is unused.</td>
</tr>
<tr class="tcw">
<td><b>Blocks/Record</b></td>
<td>Average number of blocks per row (that is, how many links a fragmented row is composed of). This is always 1.0 for fixed-format tables. This value should stay as close to 1.0 as possible. If it gets too large, you can reorganize the table.</td>
</tr>
<tr class="tcw">
<td><b>Recordblocks</b></td>
<td>How many blocks (links) are used. For fixed-format tables, this is the same as the number of rows.</td>
</tr>
<tr class="tcw">
<td><b>Deleteblocks</b></td>
<td>How many blocks (links) are deleted.</td>
</tr>
<tr class="tcw">
<td><b>Recorddata</b></td>
<td>How many bytes in the data file are used.</td>
</tr>
<tr class="tcw">
<td><b>Deleted data</b></td>
<td>How many bytes in the data file are deleted (unused).</td>
</tr>
<tr class="tcw">
<td><b>Lost space</b></td>
<td>If a row is updated to a shorter length, some space is lost. This is the sum of all such losses, in bytes.</td>
</tr>
<tr class="tcw">
<td><b>Linkdata</b></td>
<td>When the dynamic table format is used, row fragments are linked with pointers (4 to 7 bytes each). Linkdata is the sum of the amount of storage used by all such pointers.</td>
</tr>
</table>
<h3 class="tab">Memory usage</h3>
<p class="tab">The manner you allocate memory is important when you run <b>myisamchk</b>.</p>
<p class="tab"><b>myisamchk</b> uses no more memory than its memory-related variables are set to use. If you are going to use <b>myisamchk</b> on very large tables, decide first how much memory you want it to use. The default is to use only about 3 MB to perform repairs, but using larger values, you can get <b>myisamchk</b> to operate faster. For example, if you have more than 512 MB RAM available, you could use options such as these (in addition to any other options you might specify):</p>
<pre class="tab">shell&gt; myisamchk --myisam_sort_buffer_size=256M \
           --key_buffer_size=512M \
           --read_buffer_size=64M \
           --write_buffer_size=64M ...</pre>
<p class="tab">Using <b>--myisam_sort_buffer_size=16M</b> is probably enough for most cases.</p>
<p class="tab">Be aware that <b>myisamchk</b> uses temporary files in the directory specified by the environment variable <b>TMPDIR</b>. If <b>TMPDIR</b> points to a memory file system, out of memory errors can easily occur. If this happens, run <b>myisamchk</b> with the <b>--tmpdir=</b><i>path</i> option to specify a directory on a file system with more space. When performing repair operations, <b>myisamchk</b> also needs a lot of disk space:</p>
<ul>
<li>Twice the size of the data file (the original file and a copy). This space is not needed if you do a repair with <b>--quick</b>; in this instance, only the index file is re-created. This space must be available on the same file system as the original data file, as the copy is created in the same directory as the original.</li>
<li>Space for the new index file that replaces the old one. The old index file is truncated at the start of the repair operation, so you usually ignore this space. This space must be available on the same file system as the original data file.</li>
<li>When using <b>--recover</b> or <b>--sort-recover</b> (but not when using <b>--safe-recover</b>), you need space on disk for sorting. This space is allocated in the temporary directory (specified by the <b>TMPDIR</b> environment variable, or with the <b>--tmpdir=</b><i>path</i> option). The following formula yields the amount of space required:</li>
</ul>
<pre class="tab tcy">(largest_key + row_pointer_length) * number_of_rows * 2</pre>
<ul>
<li>You can check the length of the keys and the <b>row_pointer_length</b> with <b>myisamchk -dv tbl_name</b> (see the section called &quot;OBTAINING TABLE INFORMATION WITH MYISAMCHK&quot;). The <b>row_pointer_length</b> and <b>number_of_rows</b> values are the <b>Datafile</b> pointer and <b>Data</b> records values in the table description. To determine the <b>largest_key</b> value, check the <b>Key</b> lines in the table description. The <b>Len</b> column indicates the number of bytes for each key part. For a multiple-column index, the key size is the sum of the <b>Len</b> values for all key parts.</li>
</ul>
<p class="tab">If you have a problem with disk space during repair, you can try <b>--safe-recover</b> instead of <b>--recover</b>.</p>
<h2 id="examples">Examples</h2>
<div class="tip tab" role="note">
<span class="title note">Note</span>
<p>As mentioned above, <b>myisamchk</b> is a utility to check MyISAM tables, which have the <a href="/jargon/f/fileext.htm">file extensions</a> <b>.MYD</b> and <b>.MYI</b>. These files are stored in the database folder under the <b>/var/lib/mysql</b> directory. For example, if your database was named <b>hope</b> it'd be under the <b>/var/lib/mysql/hope directory</b>.</p>
</div>
<p class="tab">Also, keep in mind that the <b>.MYD</b> and <b>.MYI</b> are in all uppercase.</p>
<pre class="tcy tab">myisamchk -d tbl_name</pre>
<p class="tab">Running the command above would give a description and statistics about the table similar to the example below.</p>
<pre class="tab">MyISAM file: posts Record format: Packed Character set: latin1_swedish_ci (8)
Data records: 2273 Deleted blocks: 0 Recordlength: 2111 table description: Key Start Len Index type 1 1 8
unique ulonglong 2 309 600 multip. ? prefix 3 1736 60 multip. varchar prefix 65 60 varchar 17 8 ulonglong 1 8
ulonglong 4 957 8 multip. ulonglong 5 5 254 fulltext ? packed 1 4 float 6 5 254 fulltext ? packed 1 4 float</pre>
<pre class="tcy tab">myisamchk -r posts.MYI</pre>
<p class="tab">Running the command above would repair the posts.MYI table. If the <b>-r</b> does not repair the table, you can force the repair using the <b>-f</b> option. So instead of the command above, you'd type <b>myisamchk -f posts.MYI</b>.</p>
<h2 id="related">Related commands</h2>
<p class="tab"><a href="/unix/mysql.htm"><b>mysql</b></a> &mdash; An open-source relational database management system.</p>
</article>
<div class="bottomad" aria-hidden="true">
<ins class="adsbygoogle" data-ad-client="ca-pub-3999293766533555" data-ad-format="auto" data-ad-slot="6514780129" style="display:block"></ins>
<script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
</div>
<aside><div id="meta_wrap" class="cf"><ul class="options cf"><li class="useful-page"><span class="nolink">Was this page useful?</span><a href="/cgi-bin/feedback.cgi?yes" class="first-child" rel="nofollow">Yes</a><a href="/cgi-bin/feedback.cgi?no" rel="nofollow">No</a></li><li><ul><li class="feedback"><a href="/feedback/" rel="nofollow" title="Give us your feedback about this page">Feedback</a></li><li class="email"><a href="/contact/" rel="nofollow" title="E-mail Computer Hope">E-mail</a></li><li class="share"><a href="/share/" rel="nofollow" title="Share this page with friends and social networks">Share</a></li><li class="first-child print"><a href="#" onclick="window.print();return false;" rel="nofollow" title="Print a copy of this page">Print</a></li></ul></li></ul></div></aside>
</div>
<footer><form action="https://www.computerhope.com/cgi-bin/search.cgi" role="search" method="post" class="cf"><input class="sbar" name="q" aria-label="search" type="text" /><button type="Submit">Search</button></form><div role="navigation" aria-label="footer"><ul class="cf"><li class="recent-pages"><ol><li class="ftitle">Recently added pages</li><li id="ra1"></li><li id="ra2"></li><li id="ra3"></li><li id="ra4"></li><li id="ra5"></li><li><a href="/whatnew.htm">View all recent updates</a></li></ol></li><li class="useful-links"><ol><li class="ftitle">Useful links</li><li><a href="/more.htm">About Computer Hope</a></li><li><a href="/sindex.htm">Site Map</a></li><li><a href="/forum/">Forum</a></li><li><a href="/contact/">Contact Us</a></li><li><a href="/issues/ch000586.htm">How to Help</a></li><li><a href="/chtop10.htm">Top 10 pages</a></li></ol></li><li class="social-networks"><ol><li class="ftitle">Follow us</li><li><a href="https://www.facebook.com/computerhope/" class="facebook">Facebook</a></li><li><a href="https://twitter.com/computerhope/" class="twitter">Twitter</a></li><li><a href="https://www.pinterest.com/computerhope/" class="pinterest">Pinterest</a></li><li><a href="https://www.youtube.com/user/Computerhope/" class="youtube">YouTube</a></li><li><a href="/rss.htm" class="rss">RSS</a></li></ol></li></ul></div><div class="copyright"><a href="/"><span class="blogo" title="Computer Hope home page" aria-hidden="true"></span><span class="sr">Computer Hope home page</span></a>&copy; 2022 Computer Hope<br><a href="/legal.htm" class="legal">Legal Disclaimer - Privacy Statement</a></div></footer>
</div>
<script async src="https://www.computerhope.com/ch.js"></script>
<div id="tt" aria-hidden="true"></div>
<script>(function(){var js = "window['__CF$cv$params']={r:'740a831bce9fc424',m:'P8O7qwUgtHNn69_2KMuSY67D7h8H3qep6bzJWenwyD4-1661495356-0-Ab+Oui3nt6Iu1Ltllonnky476/zoW4xx9RyVRLfentoBFf8orHokoIwuqE91gfJNjAiznSs48VTDV3BqkAj9/fzjG7y/Qg0bAUec/W8kMfd3TufElgtxj2LPSiyPuFlYwgVKVgmo175ZMdaQqsgM7vU=',s:[0xf37ab8a473,0x071597d976],u:'/cdn-cgi/challenge-platform/h/b'};var now=Date.now()/1000,offset=14400,ts=''+(Math.floor(now)-Math.floor(now%offset)),_cpo=document.createElement('script');_cpo.nonce='',_cpo.src='/cdn-cgi/challenge-platform/h/b/scripts/alpha/invisible.js?ts='+ts,document.getElementsByTagName('head')[0].appendChild(_cpo);";var _0xh = document.createElement('iframe');_0xh.height = 1;_0xh.width = 1;_0xh.style.position = 'absolute';_0xh.style.top = 0;_0xh.style.left = 0;_0xh.style.border = 'none';_0xh.style.visibility = 'hidden';document.body.appendChild(_0xh);function handler() {var _0xi = _0xh.contentDocument || _0xh.contentWindow.document;if (_0xi) {var _0xj = _0xi.createElement('script');_0xj.nonce = '';_0xj.innerHTML = js;_0xi.getElementsByTagName('head')[0].appendChild(_0xj);}}if (document.readyState !== 'loading') {handler();} else if (window.addEventListener) {document.addEventListener('DOMContentLoaded', handler);} else {var prev = document.onreadystatechange || function () {};document.onreadystatechange = function (e) {prev(e);if (document.readyState !== 'loading') {document.onreadystatechange = prev;handler();}};}})();</script></body>
</html>