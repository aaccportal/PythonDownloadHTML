<!DOCTYPE html>
<!--[if lt IE 7]><html class="ie6 ie"><![endif]--><!--[if IE 7]><html class="ie7 ie"><![endif]--><!--[if IE 8]><html class="ie8 ie"><![endif]--><!--[if IE 9]><html class="ie9 ie"><![endif]-->
<html lang="en" itemscope itemtype="https://schema.org/WebPage">

<body>
<div class="skip"><a href="#main-content">Skip to Main Content</a></div>
<div class="wrapper">
<header class="cf"><a href="/"><picture><source srcset="/cdn/computer-hope-dark.png" media="(prefers-color-scheme: dark)" class="logo"><img src="/cdn/computer-hope.jpg" width="412" height="82" alt="Computer Hope" aria-label="Computer Hope home page" class="logo"></picture></a><div itemscope itemtype="https://schema.org/SiteNavigationElement"><form action="https://www.computerhope.com/cgi-bin/search.cgi" role="search" method="post"><input class="sbar" name="q" aria-label="search" type="text" /><button type="Submit">Search</button></form><nav><ul id="nav"><li><a href="/oh.htm" title="Questions and answers, troubleshooting, and help">Help</a></li><li><a href="/tips/" title="Computer tips and tricks">Tips</a></li><li><a href="/jargon.htm" title="Computer terms, jargon, and glossary">Dictionary</a></li><li><a href="/history/" title="Computer timeline, events, and biographies">History</a></li><li><a href="/forum/" title="Computer Hope forums and community">Forums</a></li><li><a href="/contact/" title="Contact Computer Hope or other computer companies">Contact</a></li></ul></nav></div></header>
<div class="container ad" aria-hidden="true">
<ins class="adsbygoogle" data-ad-client="ca-pub-3999293766533555" data-ad-format="auto" data-ad-slot="7994873325" style="display:block"></ins>
<script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
</div>
<nav class="container" aria-label="breadcrumb"><ol class="breadcrumbs" itemscope itemtype="https://schema.org/BreadcrumbList"><li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/" itemprop="item"><span itemprop="name">Home</span></a><meta itemprop="position" content="1" /></li><li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/oh.htm" itemprop="item"><span itemprop="name">Help</span></a><meta itemprop="position" content="2" /></li><li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/unix.htm" itemprop="item"><span itemprop="name">Linux</span></a><meta itemprop="position" content="3" /></li></ol></nav>
<div class="container content" id="main-content" role="main">
<article>
<h1 itemprop="headline">Linux wget command</h1>
<div class="updated">Updated: <span itemprop="dateModified" content="2021-11-06">11/06/2021</span> by <span itemprop="author publisher creator" itemscope itemtype="https://schema.org/Organization"><span itemprop="name">Computer Hope</span></span></div>
<img src="/cdn/linux/wget.gif" width="300" height="300" alt="wget command" class="floatRight"><p class="intro">On <a href="/jargon/u/unix-like.htm">Unix-like</a> operating systems, the <b>wget</b> command <a href="/jargon/d/download.htm">downloads</a> files served with <a href="/jargon/h/http.htm">HTTP, HTTPS</a>, or <a href="/jargon/f/ftp.htm">FTP</a> over a <a href="/jargon/n/network.htm">network</a>.</p>
<div class="pagenav contents" role="navigation" aria-label="contents">
<ul>
<li><a href="#desc">Description</a></li>
<li><a href="#overview">Overview</a></li>
<li><a href="#install">Installing wget</a></li>
<li><a href="#syntax">Syntax</a></li>
<li><a href="#startup">Basic startup options</a></li>
<li><a href="#logging">Logging and input file options</a></li>
<li><a href="#download">Download options</a></li>
<li><a href="#directory">Directory options</a></li>
<li><a href="#http">HTTP options</a></li>
<li><a href="#https">HTTPS (SSL/TLS) options</a></li>
<li><a href="#ftp">FTP options</a></li>
<li><a href="#retrieval">Recursive retrieval options</a></li>
<li><a href="#accept-reject">Recursive accept/reject options</a></li>
<li><a href="#files">Files</a></li>
<li><a href="#examples">Examples</a></li>
<li><a href="#related">Related commands</a></li>
<li class="out"><a href="/unix.htm">Linux commands help</a></li>
</ul>
</div>
<h2 id="desc">Description</h2>
<p class="tab"><b>wget</b> is a free utility for <a href="/jargon/n/noninact.htm">non-interactive</a> download of files from the <a href="/jargon/i/internet.htm">web</a>. It supports HTTP, HTTPS, and FTP <a href="/jargon/p/protocol.htm">protocols</a>, and retrieval through HTTP <a href="/jargon/p/proxyser.htm">proxies</a>.</p>
<p class="tab"><b>wget</b> is non-interactive, meaning that it can work in the background, while the user is not logged on, which allows you to start a retrieval and disconnect from the system, letting <b>wget</b> finish the work. By contrast, most <a href="/jargon/b/browser.htm">web browsers</a> require constant user interaction, which make transferring a lot of data difficult.</p>
<p class="tab"><b>wget</b> can follow links in <a href="/jargon/h/html.htm">HTML</a> and <a href="/jargon/x/xhtml.htm">XHTML</a> pages and create local versions of remote websites, fully recreating the <a href="/jargon/d/director.htm">directory</a> structure of the original site, which is sometimes called "recursive downloading.'' While doing that, <b>wget</b> respects the <a href="/jargon/r/robot.htm">Robot</a> Exclusion Standard (<a href="/jargon/r/robotstx.htm">robots.txt</a>). <b>wget</b> can be instructed to convert the links in downloaded HTML files to the local files for offline viewing.</p>
<p class="tab"><b>wget</b> is designed for robustness over slow or unstable network connections; if a download fails due to a network problem, it keeps retrying until the whole file is retrieved. If the <a href="/jargon/s/server.htm">server</a> supports regetting, it instructs the server to continue the download from where it left off.</p>
<h2 id="overview">Overview</h2>
<p class="tab">The simplest way to use wget is to provide it with the location of a file to download over HTTP. For example, to download the file <b>http://website.com/files/file.zip</b>, this command:</p>
<pre class="tab tcy">wget http://website.com/files/file.zip</pre>
<p class="tab">...would download the file into the <a href="/jargon/c/currentd.htm">working directory</a>.</p>
<p class="tab">There are many options that allow you to use <b>wget</b> in different ways, for different purposes. These are outlined below.</p>
<h2 id="install">Installing wget</h2>
<p class="tab">If your <a href="/jargon/o/os.htm">operating system</a> is <a href="/jargon/u/ubuntu.htm">Ubuntu</a>, or another <a href="/jargon/d/debian.htm">Debian</a>-based Linux <a href="/jargon/v/variant.htm">distribution</a> which uses <a href="/jargon/a/apt.htm">APT</a> for package management, you can install <b>wget</b> with <a href="/unix/apt-get.htm"><b>apt-get</b></a>:</p>
<pre class="tab tcy">sudo apt-get install wget</pre>
<p class="tab">For other operating systems, see your package manager's documentation for information about how to locate the <b>wget</b> binary package and install it. Or, you can install it from <a href="/jargon/s/source.htm">source</a> from the <a href="https://www.gnu.org/software/wget/" class="external">GNU official website</a>.</p>
<h2 id="syntax">Syntax</h2>
<pre class="tcy tab">wget [<i>option</i>]... [<i>URL</i>]...</pre>
<h2 id="startup">Basic startup options</h2>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:200px"><b>-V</b>, <b>--version</b></td>
<td>Display the version of <b>wget</b>, and exit.</td>
</tr>
<tr class="tcw">
<td><b>-h</b>, <b>--help</b></td>
<td>Print a help message describing all the <b>wget</b>'s command-line options, and exit.</td>
</tr>
<tr class="tcw">
<td><b>-b</b>, <b>--background</b></td>
<td>Go to background immediately after startup. If no output file is specified via the <b>-o</b>, output is redirected to <b>wget-log</b>.</td>
</tr>
<tr class="tcw">
<td><b>-e</b> <i>command</i>,<br><b>--execute</b> <i>command</i></td>
<td>Execute <i>command</i> as if it were a part of the file <b>.wgetrc</b>. A command thus invoked is executed after the commands in <b>.wgetrc</b>, thus taking precedence over them.</td>
</tr>
</table>
<h2 id="logging">Logging and input file options</h2>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:240px"><b>-o</b> <i>logfile</i>,<br><b>--output-file=</b><i>logfile</i></td>
<td>Log all messages to <i>logfile</i>. The messages are normally reported to standard error.</td>
</tr>
<tr class="tcw">
<td><b>-a</b> <i>logfile</i>,<br><b>--append-output=</b><i>logfile</i></td>
<td>Append to <i>logfile</i>. This option is the same as <b>-o</b>, only it appends to <i>logfile</i> instead of overwriting the old log file. If <i>logfile</i> does not exist, a new file is created.</td>
</tr>
<tr class="tcw">
<td><b>-d</b>, <b>--debug</b></td>
<td>Turn on <a href="/jargon/d/debug.htm">debug</a> output, meaning various information important to the developers of <b>wget</b> if it does not work properly. Your <a href="/jargon/r/root.htm">system administrator</a> may have chosen to compile <b>wget</b> without debug support, in which case <b>-d</b> does not work.<br><br> Note that compiling with debug support is always safe; <b>wget</b> compiled with the debug support does not print any debug info unless requested with <b>-d</b>.</td>
</tr>
<tr class="tcw">
<td><b>-q</b>, <b>--quiet</b></td>
<td>Turn off <b>wget</b>'s output.</td>
</tr>
<tr class="tcw">
<td><b>-v</b>, <b>--verbose</b></td>
<td>Turn on <a href="/jargon/v/verbose.htm">verbose</a> output, with all the available data. The default output is verbose.</td>
</tr>
<tr class="tcw">
<td><b>-nv</b>, <b>--non-verbose</b></td>
<td>Non-verbose output. Turn off verbose without being completely quiet (use <b>-q</b> for that), which means that error messages and basic information still get printed.</td>
</tr>
<tr class="tcw">
<td><b>-i</b> <i>file</i>, <b>--input-file=</b><i>file</i></td>
<td>Read URLs from a local or external file. If "<b>-</b>" is specified as <i>file</i>, URLs are read from the <a href="/jargon/s/stdin.htm">standard input</a>. (Use "<b>./-</b>" to read from a file literally named "<b>-</b>".)<br><br> If this function is used, no URLs need be present on the command line. If there are URLs both on the command line and input file, those on the command lines are the first ones to be retrieved. If <b>--force-html</b> is not specified, then <i>file</i> should consist of a series of URLs, one per line.<br><br> However, if you specify <b>--force-html</b>, the document is regarded as HTML. In that case you may have problems with relative links, which you can solve either by adding <b>&lt;base href="</b><i>url</i><b>"&gt;</b> to the documents or by specifying <b>--base=</b><i>url</i> on the command line.<br><br> If the file is an external one, the document is automatically treated as HTML if the <b>Content-Type</b> is "<b>text/html</b>". Furthermore, the file's location is implicitly used as <b>base href</b> if none was specified.</td>
</tr>
<tr class="tcw">
<td><b>-F</b>, <b>--force-html</b></td>
<td>When input is read from a file, force it to be treated as an HTML file. This enables you to retrieve relative links from existing HTML files on your local disk, by adding <b>&lt;base href="</b><i>url</i><b>"&gt;</b> to HTML, or using the <b>--base command-line</b> option.</td>
</tr>
<tr class="tcw">
<td><b>-B</b> <i>URL</i><br><b>--base=</b><i>URL</i></td>
<td>Resolves relative links using URL as the point of reference, when reading links from an HTML file specified via the <b>-i</b>/<b>--input-file</b> option (together with <b>--force-html</b>, or when the input file was fetched remotely from a server describing as HTML). This option is equivalent to the presence of a "<b>BASE</b>" tag in the HTML input file, with URL as the value for the "<b>href</b>" attribute.<br><br> For instance, if you specify <b>http://foo/bar/a.html</b> for URL, and <b>wget</b> reads <b>../baz/b.html</b> from the input file, it would be resolved to <b>http://foo/baz/b.html</b>.</td>
</tr>
<tr class="tcw">
<td><b>--config=</b><i>FILE</i></td>
<td>Specify the location of a startup file you want to use.</td>
</tr>
</table>
<h2 id="download">Download options</h2>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:350px"><b>--bind-address=</b><i>ADDRESS</i></td>
<td>When making client <a href="/jargon/t/tcpip.htm">TCP/IP</a> connections, bind to <i>ADDRESS</i> on the local machine. <i>ADDRESS</i> may be specified as a <a href="/jargon/h/hostname.htm">hostname</a> or <a href="/jargon/i/ip.htm">IP address</a>. This option can be useful if your machine is bound to multiple IPs.</td>
</tr>
<tr class="tcw">
<td><b>-t</b> <i>number</i>, <b>--tries=</b><i>number</i></td>
<td>Set number of retries to <i>number</i>. Specify <b>0</b> or <b>inf</b> for infinite retrying. The default is to retry <b>20</b> times, except for fatal errors like "connection refused'' or "not found'' (<a href="/jargon/num/404.htm">404</a>), which are not retried.</td>
</tr>
<tr class="tcw">
<td><b>-O</b> <i>file</i>, <b>--output-document=</b><i>file</i></td>
<td>The documents are not written to the appropriate files, but all are <a href="/jargon/c/concaten.htm">concatenated</a> together and written to <i>file</i>.<br><br> If "<b>-</b>" is used as <i>file</i>, documents are printed to standard output, disabling link conversion. (Use "<b>./-</b>" to print to a file literally named "<b>-</b>".)<br><br> Use of <b>-O</b> is not intended to mean "use the name file instead of the one in the URL;" rather, it is analogous to shell <a href="/jargon/r/redirect.htm">redirection</a>: <b>wget -O file http://foo</b> is intended to work like <b>wget -O - http://foo &gt; file</b>; <i>file</i> is <a href="/jargon/t/truncate.htm">truncated</a> immediately, and all downloaded content is written there.<br><br> For this reason, <b>-N</b> (for timestamp-checking) is not supported in combination with <b>-O</b>: since file is always newly created, it always has a very new timestamp. A warning is issued if this combination is used.<br><br> Similarly, using <b>-r</b> or <b>-p</b> with <b>-O</b> may not work as you expect: <b>wget</b> won't download the first file to file and then download the rest to their normal names: all downloaded content is placed in file. This was disabled in version 1.11, but was reinstated (with a warning) in 1.11.2, as there are some cases where this behavior can actually have some use.<br><br> Note that a combination with <b>-k</b> is only permitted when downloading a single document, as in that case, it converts all relative URIs to external ones; <b>-k</b> makes no sense for multiple URIs when they're all being downloaded to a single file; <b>-k</b> can be used only when the output is a regular file.</td>
</tr>
<tr class="tcw">
<td><b>-nc</b>, <b>--no-clobber</b></td>
<td>If a file is downloaded more than once in the same directory, <b>wget</b>'s behavior depends on a few options, including <b>-nc</b>. In certain cases, the local file is "clobbered" (<a href="/jargon/o/overwrit.htm">overwritten</a>), upon repeated download. In other cases, it is preserved.<br><br> When running <b>wget</b> without <b>-N</b>, <b>-nc</b>, or <b>-r</b>, downloading the same file in the same directory results in the original copy of file being preserved and the second copy being named <b>file.1</b>. If that file is downloaded yet again, the third copy is named <b>file.2</b>, etc. When <b>-nc</b> is specified, this behavior is suppressed, and <b>wget</b> refuses to download newer copies of file. Therefore, "no-clobber" is a misnomer in this mode: it's not clobbering that's prevented (as the numeric suffixes were already preventing clobbering), but rather the multiple version saving that's being turned off.<br><br> When running <b>wget</b> with <b>-r</b>, but without <b>-N</b> or <b>-nc</b>, re-downloading a file results in the new copy overwriting the old. Adding <b>-nc</b> prevents this behavior, instead causing the original version to be preserved and any newer copies on the server to be ignored.<br><br> When running <b>wget</b> with <b>-N</b>, with or without <b>-r</b>, the decision as to whether or not to download a newer copy of a file depends on the local and remote timestamp and size of the file. <b>-nc</b> may not be specified at the same time as <b>-N</b>.<br><br> Note that when <b>-nc</b> is specified, files with the suffixes <b>.html</b> or <b>.htm</b> are loaded from the local disk and parsed as if they had been retrieved from the web.</td>
</tr>
<tr class="tcw">
<td><b>-c</b>, <b>--continue</b></td>
<td>Continue getting a partially-downloaded file. This option is useful when you want to finish up a download started by a previous instance of <b>wget</b>, or by another program. For instance:<br><br><pre class="tcy">wget -c ftp://sunsite.doc.ic.ac.uk/ls-lR.Z</pre> If there is a file named <b>ls-lR.Z</b> in the current directory, <b>wget</b> assumes that it is the first portion of the remote file, and asks the server to continue the retrieval from an offset equal to the length of the local file.<br><br> Note that you don't need to specify this option if you only want the current invocation of <b>wget</b> to retry downloading a file should the connection be lost midway through, which is the default behavior. <b>-c</b> only affects resumption of downloads started before this invocation of <b>wget</b>, and whose local files are still sitting around.<br><br> Without <b>-c</b>, the previous example would only download the remote file to <b>ls-lR.Z.1</b>, leaving the truncated <b>ls-lR.Z</b> file alone.<br><br> Beginning with <b>wget</b> 1.7, if you use <b>-c</b> on a non-empty file, and it turns out that the server does not support continued downloading, <b>wget</b> refuses to start the download from scratch, which would effectively ruin existing contents. If you want the download to start from scratch, remove the file.<br><br> Also, beginning with <b>wget</b> 1.7, if you use <b>-c</b> on a file that is of equal size as the one on the server, <b>wget</b> refuses to download the file and print an explanatory message. The same happens when the file is smaller on the server than locally (presumably because it was changed on the server since your last download attempt), because "continuing" is not meaningful, no download occurs.<br><br> On the other hand, while using <b>-c</b>, any file that's bigger on the server than locally is considered an incomplete download and only (length(remote) - length(local)) bytes are downloaded and tacked onto the end of the local file. This behavior can be desirable in certain cases: for instance, you can use <b>wget -c</b> to download only the new portion that's been appended to a data collection or log file.<br><br> However, if the file is bigger on the server because it's been changed, as opposed to appended to, you end up with a garbled file. <b>wget</b> has no way of verifying that the local file is really a valid prefix of the remote file. You need to be especially careful of this when using <b>-c</b> in conjunction with <b>-r</b>, as every file is considered an "incomplete download" candidate.<br><br> Another instance where you get a garbled file if you try to use <b>-c</b> is if you have a lame HTTP proxy that inserts a "transfer interrupted" string into the local file. In the future a "rollback" option may be added to deal with this case.<br><br> Note that <b>-c</b> only works with FTP servers and with HTTP servers that support the "Range" header. </td>
</tr>
<tr class="tcw">
<td><b>--progress=</b><i>type</i></td>
<td>Select the progress indicator you want to use. Legal indicators are "<b>dot</b>" and "<b>bar</b>".<br><br> The "<b>bar</b>" indicator is used by default. It draws an <a href="/jargon/a/ascii.htm">ASCII</a> progress bar graphics (a.k.a "thermometer" display) indicating the status of retrieval. If the output is not a TTY, the "<b>dot</b>" bar is used by default.<br><br> Use <b>--progress=dot</b> to switch to the "<b>dot</b>" display. It traces the retrieval by printing dots on the screen, each dot representing a fixed amount of downloaded data.<br><br> When using the dotted retrieval, you may also set the style by specifying the type as <b>dot:style</b>. Different styles assign different meaning to one dot. With the "<b>default</b>" style each dot represents 1 <a href="/jargon/k/kilobyte.htm">K</a>, there are ten dots in a cluster and 50 dots in a line. The "<b>binary</b>" style has a more "computer"-like orientation: 8 K dots, 16-dots clusters and 48 dots per line (which makes for 384 K lines). The "<b>mega</b>" style is suitable for downloading very large files; each dot represents 6 4K retrieved, there are eight dots in a cluster, and 48 dots on each line (so each line contains 3 M).<br><br> Note that you can set the default style using the <b>progress</b> command in <b>.wgetrc</b>. That setting may be overridden from the command line. The exception is that, when the output is not a TTY, the "<b>dot</b>" progress is favored over "<b>bar</b>". To force the bar output, use <b>--progress=bar:force</b>.</td>
</tr>
<tr class="tcw">
<td><b>-N</b>, <b>--timestamping</b></td>
<td>Turn on <a href="/jargon/t/timestam.htm">time stamping</a>. Output file has a timestamp matching remote copy; if file already exists locally, and remote file is not newer, no download occurs.</td>
</tr>
<tr class="tcw">
<td><b>--no-use-server-timestamps</b></td>
<td>Don't set the local file's timestamp by the one on the server.<br><br> By default, when a file is downloaded, its timestamps are set to match those from the remote file, which allows the use of <b>--timestamping</b> on subsequent invocations of <b>wget</b>. However, it is sometimes useful to base the local file's timestamp on when it was downloaded; for that purpose, the <b>--no-use-server-timestamps</b> option is provided.</td>
</tr>
<tr class="tcw">
<td><b>-S</b>, <b>--server-response</b></td>
<td>Print the headers sent by HTTP servers and responses sent by FTP servers.</td>
</tr>
<tr class="tcw">
<td><b>--spider</b></td>
<td>When invoked with this option, <b>wget</b> behaves as a web <a href="/jargon/s/spider.htm">spider</a>, which means it does not download the pages, only checks that they are there. For example, you can use <b>wget</b> to check your bookmarks:<br><br><pre class="tcy">wget --spider --force-html -i bookmarks.html</pre> This feature needs much more work for <b>wget</b> to get close to the functionality of real web spiders. </td>
</tr>
<tr class="tcw">
<td><b>-T</b> <i>seconds</i>, <b>--timeout=</b><i>seconds</i></td>
<td>Set the network <a href="/jargon/t/timeout.htm">timeout</a> to <i>seconds</i> seconds. This option is equivalent to specifying <b>--dns-timeout</b>, <b>--connect-timeout</b>, and <b>--read-timeout</b>, all at the same time.<br><br> When interacting with the network, <b>wget</b> can check for timeout and abort the operation if it takes too long. This prevents anomalies like hanging reads and infinite connects. The only timeout enabled by default is a 900-second read timeout. Setting a timeout to <b>0</b> disables it altogether. Unless you know what you are doing, it is best not to change the default timeout settings.<br><br> All timeout-related options accept decimal values, and subsecond values. For example, <b>0.1</b> seconds is a legal (though unwise) choice of timeout. Subsecond timeouts are useful for checking server response times or for testing network <a href="/jargon/l/latency.htm">latency</a>.</td>
</tr>
<tr class="tcw">
<td><b>--dns-timeout=</b><i>seconds</i></td>
<td>Set the <a href="/jargon/d/dns.htm">DNS</a> lookup timeout to <i>seconds</i> seconds. DNS lookups fail if not completed in the specified time. By default, there is no timeout on DNS lookups, other than that implemented by system <a href="/jargon/l/library.htm">libraries</a>.</td>
</tr>
<tr class="tcw">
<td><b>--connect-timeout=</b><i>seconds</i></td>
<td>Set the connect timeout to <i>seconds</i> seconds. TCP connections that take longer to establish are aborted. By default, there is no connect timeout, other than that implemented by system libraries.</td>
</tr>
<tr class="tcw">
<td><b>--read-timeout=</b><i>seconds</i></td>
<td>Set the read (and write) timeout to <i>seconds</i> seconds. Reads fail if they take longer. The default value for read timeout is 900 seconds.</td>
</tr>
<tr class="tcw">
<td><b>--limit-rate=</b><i>amount</i></td>
<td>Limit the download speed to <i>amount</i> bytes per second. The <i>amount</i> may be expressed in <a href="/jargon/b/byte.htm">bytes</a>, kilobytes (with the <b>k</b> suffix), or <a href="/jargon/m/megabyte.htm">megabytes</a> (with the <b>m</b> suffix). For example, <b>--limit-rate=20k</b> limits the retrieval rate to 20 KB/s. This option is useful when, for whatever reason, you don't want <b>wget</b> to consume the entire available bandwidth.<br><br> This option allows the use of decimal numbers, usually in conjunction with power suffixes; for example, <b>--limit-rate=2.5k</b> is a legal value.<br><br> Note that <b>wget</b> implements the limiting by sleeping the appropriate amount of time after a network read that took less time than specified by the rate. Eventually this strategy causes the TCP transfer to slow down to approximately the specified rate. However, it may take some time for this balance to be achieved, so don't be surprised if limiting the rate doesn't work well with very small files.</td>
</tr>
<tr class="tcw">
<td><b>-w</b> <i>seconds</i>, <b>--wait=</b><i>seconds</i></td>
<td>Wait the specified number of seconds between the retrievals. Use of this option is recommended, as it lightens the server load by making the requests less frequent. Instead of in seconds, the time can be specified in minutes using the <b>m</b> suffix, in hours using <b>h</b> suffix, or in days using <b>d</b> suffix.<br><br> Specifying a large value for this option is useful if the network or the destination host is down, so that <b>wget</b> can wait long enough to reasonably expect the network error to be fixed before the retry. The waiting interval specified by this function is influenced by <b>--random-wait</b> (see below).</td>
</tr>
<tr class="tcw">
<td><b>--waitretry=</b><i>seconds</i></td>
<td>If you don't want <b>wget</b> to wait between every retrieval, but only between retries of failed downloads, you can use this option. <b>wget</b> uses linear backoff, waiting 1 second after the first failure on a given file, then waiting 2 seconds after the second failure on that file, up to the maximum number of <i>seconds</i> you specify. Therefore, a value of <b>10</b> actually makes <b>wget</b> wait up to (1 + 2 + ... + 10) = 55 seconds per file.<br><br> By default, <b>wget</b> assumes a value of <b>10</b> seconds.</td>
</tr>
<tr class="tcw">
<td><b>--random-wait</b></td>
<td>Some websites may perform log analysis to identify retrieval programs such as <b>wget</b> by looking for statistically significant similarities in the time between requests. This option causes the time between requests to vary between 0 and 2*<i>wait</i> seconds, where <i>wait</i> was specified using the <b>--wait</b> option, to mask <b>wget</b>'s presence from such analysis.<br><br></td>
</tr>
<tr class="tcw">
<td><b>--no-proxy</b></td>
<td>Don't use proxies, even if the appropriate <b>*_proxy</b> <a href="/jargon/e/envivari.htm">environment variable</a> is defined.</td>
</tr>
<tr class="tcw">
<td><b>-Q</b> <i>quota</i>, <b>--quota=</b><i>quota</i></td>
<td>Specify download quota for automatic retrievals. The value can be specified in bytes (default), kilobytes (with <b>k</b> suffix), or megabytes (with <b>m</b> suffix).<br><br> Note that <i>quota</i> never affects downloading a single file. So if you specify <b>wget -Q10k ftp://wuarchive.wustl.edu/ls-lR.gz</b>, all the <b>ls-lR.gz</b> is downloaded. The same goes even when several URLs are specified on the command-line. However, quota is respected when retrieving either <a href="/jargon/r/recursive.htm">recursively</a>, or from an input file. Thus you may safely type <b>wget -Q2m -i sites</b>; download is aborted when the quota is exceeded.<br><br> Setting quota to <b>0</b> or <b>inf</b> unlimits the download quota.</td>
</tr>
<tr class="tcw">
<td><b>--no-dns-cache</b></td>
<td>Turn off caching of DNS lookups. Normally, <b>wget</b> remembers the addresses it looked up from DNS so it doesn't have to repeatedly contact the DNS server for the same (often small) set of addresses it retrieves. This <a href="/jargon/c/cache.htm">cache</a> exists in memory only; a new <b>wget</b> run contacts DNS again.<br><br> However, it was reported that in some situations it is not desirable to cache hostnames, even for the duration of a short-running application like <b>wget</b>. With this option <b>wget</b> issues a new DNS lookup (more precisely, a new call to "<b>gethostbyname</b>" or "<b>getaddrinfo</b>") each time it makes a new connection. Please note that this option does not affect caching that might be performed by the resolving library or by an external caching layer, such as NSCD.</td>
</tr>
<tr class="tcw">
<td><b>--restrict-file-names=</b><i>modes</i></td>
<td>Change which characters found in remote URLs may show up in local file names generated from those URLs. Characters that are restricted by this option are <a href="/jargon/e/esc.htm">escaped</a>, i.e., replaced with <b>%HH</b>, where <b>HH</b> is the <a href="/jargon/h/hex.htm">hexadecimal</a> number that corresponds to the restricted character.<br><br> By default, <b>wget</b> escapes the characters that are not valid as part of file names on your operating system, and control characters that are unprintable. This option is useful for changing these defaults, either because you are downloading to a non-native partition, or because you want to disable escaping of the control characters.<br><br> The <i>modes</i> are a comma-separated set of text values. The acceptable values are <b>unix</b>, <b>windows</b>, <b>nocontrol</b>, <b>ascii</b>, <b>lowercase</b>, and <b>uppercase</b>. The values <b>unix</b> and <b>windows</b> are mutually exclusive (one overrides the other), as are <b>lowercase</b> and <b>uppercase</b>. Those last are special cases, as they do not change the set of characters that would be escaped, but rather force local file paths to be converted either to lower or uppercase.<br><br> When mode is set to <b>unix</b>, <b>wget</b> escapes the character <b>/</b> and the control characters in the ranges <b>0</b>-<b>31</b> and <b>128</b>-<b>159</b>. This option is the default on Unix-like <a href="/os.htm">OSes</a>.<br><br> When mode is set to <b>windows</b>, <b>wget</b> escapes the characters <b>\</b>, <b>|</b>, <b>/</b>, <b>:</b>, <b>?</b>, <b>"</b>, <b>*</b>, <b>&lt;</b>, <b>&gt;</b>, and the control characters in the ranges <b>0</b>-<b>31</b> and <b>128</b>-<b>159</b>. In addition to this, <b>wget</b> in Windows mode uses <b>+</b> instead of <b>:</b> to separate host and port in local file names, and uses <b>@</b> instead of <b>&amp;</b> to separate the query portion of the file name from the rest. Therefore, an URL that would be saved as <b>www.xemacs.org:4300/search.pl?input=blah</b> in Unix mode would be saved as <b>www.xemacs.org+4300/<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="790a1c180b1a11570915391017090c0d">[email&#160;protected]</a>=blah</b> in Windows mode. This mode is the default on Windows.<br><br> If you specify <b>nocontrol</b>, then the escaping of the control characters is also switched off. This option may make sense when you are downloading URLs whose names contain <a href="/jargon/u/unicode.htm">UTF-8</a> <a href="/jargon/c/charact.htm">characters</a>, on a system that can save and display filen ames in UTF-8 (some possible byte values used in UTF-8 byte sequences fall in the range of values designated by <b>wget</b> as "controls").<br><br> The <b>ascii</b> mode is used to specify that any bytes whose values are outside the range of ASCII characters (that is, greater than 127) shall be escaped. This mode can be useful when saving file names whose encoding does not match the one used locally.</td>
</tr>
<tr class="tcw">
<td><b>-4</b>, <b>--inet4-only</b>; <b>-6</b>, <b>--inet6-only</b></td>
<td>Force connecting to <a href="/jargon/i/ipv4.htm">IPv4</a> or <a href="/jargon/i/ipv6.htm">IPv6</a> addresses. With <b>--inet4-only</b> or <b>-4</b>, <b>wget</b> only connects to IPv4 hosts, ignoring AAAA records in DNS, and refusing to connect to IPv6 addresses specified in URLs. Conversely, with <b>--inet6-only</b> or <b>-6</b>, <b>wget</b> only connects to IPv6 hosts and ignore A records and IPv4 addresses.<br><br> Neither options should be needed normally. By default, an IPv6-aware <b>wget</b> uses the address family specified by the host's DNS record. If the DNS responds with both IPv4 and IPv6 addresses, <b>wget</b> tries them in sequence until it finds one it can connect to. (Also, see "<b>--prefer-family</b>" option described below.)<br><br> These options can deliberately force the use of IPv4 or IPv6 address families on dual family systems, usually to aid debugging or deal with broken network configuration. Only one of <b>--inet6-only</b> and <b>--inet4-only</b> may be specified at the same time. Neither option is available in <b>wget</b> compiled without IPv6 support.</td>
</tr>
<tr class="tcw">
<td><b>--prefer-family=</b>{<b>none</b>|<b>IPv4</b>|<b>IPv6</b>}</td>
<td>When given a choice of several addresses, connect to the addresses with specified address family first. The address order returned by DNS is used without change by default.<br><br> This avoids spurious errors and connect attempts when accessing hosts that resolve to both IPv6 and IPv4 addresses from IPv4 networks. For example, <b>www.kame.net</b> resolves to <b>2001:200:0:8002:203:47ff:fea5:3085</b> and to <b>203.178.141.194</b>. When the preferred family is "<b>IPv4</b>", the IPv4 address is used first; when the preferred family is "<b>IPv6</b>", the IPv6 address is used first; if the specified value is "<b>none</b>", the address order returned by DNS is used without change.<br><br> Unlike <b>-4</b> and <b>-6</b>, this option doesn't inhibit access to any address family, it only changes the order in which the addresses are accessed. Also, note that the reordering performed by this option is stable; it doesn't affect order of addresses of the same family. That is, the relative order of all IPv4 addresses and of all IPv6 addresses remains intact in all cases.</td>
</tr>
<tr class="tcw">
<td><b>--retry-connrefused</b></td>
<td>Consider "connection refused" a transient error and try again. Normally, <b>wget</b> gives up on a URL when it cannot connect to the site because failure to connect is taken as a sign that the server is not running at all and that retries would not help. This option is for <a href="/jargon/m/mirrorin.htm">mirroring</a> unreliable sites whose servers tend to disappear for short periods of time.</td>
</tr>
<tr class="tcw">
<td><b>--user=</b><i>user</i>,<br><b>--password=</b><i>password</i></td>
<td>Specify the username <i>user</i> and <i>password</i> for both FTP and HTTP file retrieval. These parameters can be overridden using the <b>--ftp-user</b> and <b>--ftp-password</b> options for FTP connections and the <b>--http-user</b> and <b>--http-password</b> options for HTTP connections.</td>
</tr>
<tr class="tcw">
<td><b>--ask-password</b></td>
<td>Prompt for a password for each connection established. Cannot be specified when <b>--password</b> is used, because they are mutually exclusive.</td>
</tr>
<tr class="tcw">
<td><b>--no-iri</b></td>
<td>Turn off IRI (internationalized URI support. Use <b>--iri</b> to turn it on. IRI support is activated by default.<br><br> You can set the default state of IRI support using the "<b>iri</b>" command in <b>.wgetrc</b>. That setting may be overridden from the command line.</td>
</tr>
<tr class="tcw">
<td><b>--local-encoding=</b><i>encoding</i></td>
<td>Force <b>wget</b> to use encoding as the default system encoding. That affects how <b>wget</b> converts URLs specified as arguments from locale to UTF-8 for IRI support.<br><br><b>wget</b> use the function "<b>nl_langinfo()</b>" and then the "CHARSET" environment variable to get the locale. If it fails, ASCII is used.<br><br> You can set the default local encoding using the "<b>local_encoding</b>" command in <b>.wgetrc</b>. That setting may be overridden from the command line.</td>
</tr>
<tr class="tcw">
<td><b>--remote-encoding=</b><i>encoding</i></td>
<td>Force <b>wget</b> to use encoding as the default remote server encoding. That affects how <b>wget</b> converts URIs found in files from remote encoding to UTF-8 during a recursive fetch. This options is only useful for IRI support, for the interpretation of non-ASCII characters.<br><br> For HTTP, remote encoding is in HTTP "<b>Content-Type</b>" header and in HTML "<b>Content-Type http-equiv</b>" meta tag.<br><br> You can set the default encoding using the "<b>remoteencoding</b>" command in <b>.wgetrc</b>. That setting may be overridden from the command line.</td>
</tr>
<tr class="tcw">
<td><b>--unlink</b></td>
<td>Force <b>wget</b> to <a href="/unix/unlink.htm">unlink</a> file instead of clobbering existing file. This option is useful for downloading to the directory with <a href="/jargon/h/hardlink.htm">hardlinks</a>.</td> 
</tr>
</table>
<h2 id="directory">Directory options</h2>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:250px"><b>-nd</b>, <b>--no-directories</b></td>
<td>Do not create a <a href="/jargon/h/hierfile.htm">hierarchy</a> of directories when retrieving recursively. With this option turned on, all files get saved to the <a href="/jargon/c/currentd.htm">current directory</a>, without clobbering (if a name shows up more than once, the file names get extensions <b>.n</b>).</td>
</tr>
<tr class="tcw">
<td><b>-x</b>, <b>--force-directories</b></td>
<td>The opposite of <b>-nd</b>; create a hierarchy of directories, even if one would not be created otherwise. For example, <b>wget -x http://fly.srk.fer.hr/robots.txt</b> saves the downloaded file to <b>fly.srk.fer.hr/robots.txt</b>.</td>
</tr>
<tr class="tcw">
<td><b>-nH</b>,<br><b>--no-host-directories</b></td>
<td>Disable generation of host-prefixed directories. By default, invoking <b>wget</b> with <b>-r http://fly.srk.fer.hr/</b> creates a structure of directories beginning with <b>fly.srk.fer.hr/</b>. This option disables such behavior.</td>
</tr>
<tr class="tcw">
<td><b>--protocol-directories</b></td>
<td>Use the protocol name as a directory component of local file names. For example, with this option, <b>wget -r http://host</b> saves to <b>http/host/</b>... rather than to <b>host/</b>...</td>
</tr>
<tr class="tcw">
<td><b>--cut-dirs=</b><i>number</i></td>
<td>Ignore <i>number</i> directory components. This option is useful for getting a fine-grained control over the directory where recursive retrieval is saved.<br><br> Take, for example, the directory at <b>ftp://ftp.xemacs.org/pub/xemacs/</b>. If you retrieve it with <b>-r</b>, it is saved locally under <b>ftp.xemacs.org/pub/xemacs/</b>. While the <b>-nH</b> option can remove the <b>ftp.xemacs.org/</b> part, you are still stuck with pub<b>/xemacs</b>, which is where <b>--cut-dirs</b> comes in handy; it makes <b>wget</b> not "see" <i>number</i> remote directory components. Here are several examples of how <b>--cut-dirs</b> option works:<br><br>
<table class="mtable3">
<tr class="tcw">
<td>(no options)</td>
<td><b>ftp.xemacs.org/pub/xemacs/</b></td>
</tr>
<tr class="tcw">
<td><b>-nH</b></td>
<td><b>pub/xemacs/</b></td>
</tr>
<tr class="tcw">
<td><b>-nH --cut-dirs=1</b></td>
<td><b>xemacs/</b></td>
</tr>
<tr class="tcw">
<td><b>-nH --cut-dirs=2</b></td>
<td><b>.</b></td>
</tr>
<tr class="tcw">
<td><b>--cut-dirs=1</b></td>
<td><b>ftp.xemacs.org/xemacs/</b></td>
</tr>
</table>
<br>
If you want to get rid of the directory structure, this option is similar to a combination of <b>-nd</b> and <b>-P</b>. However, unlike <b>-nd</b>, <b>--cut-dirs</b> does not lose with subdirectories; for instance, with <b>-nH --cut-dirs=1</b>, a <b>beta/</b> subdirectory is placed to <b>xemacs/beta</b>, as one would expect.</td>
</tr>
<tr class="tcw">
<td><b>-P</b> <i>prefix</i>,<br><b>--directory-prefix=</b><i>prefix</i></td>
<td>Set directory prefix to <i>prefix</i>. The directory prefix is the directory where all other files and subdirectories are saved to, i.e., the top of the retrieval tree. The default is "<b>.</b>" (the current directory).</td>
</tr>
</table>
<h2 id="http">HTTP options</h2>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:280px"><b>-E</b>, <b>--html-extension</b></td>
<td>If a file of type <b>application/xhtml+xml</b> or <b>text/html</b> is downloaded and the URL does not end with the <a href="/jargon/r/regex.htm">regexp</a> "<b>\.[Hh][Tt][Mm][Ll]?</b>", this option causes the suffix <b>.html</b> to be appended to the local file name. This option is useful, for instance, when you're mirroring a remote site that uses <b>.asp</b> pages, but you want the mirrored pages to be viewable on your stock <a href="/jargon/a/apache.htm">Apache server</a>. Another good use for this is when you're downloading <a href="/jargon/c/cgi.htm">CGI</a>-generated materials. A URL like <b>http://site.com/article.cgi?25</b> us saved as <b>article.cgi?25.html</b>.<br><br> Note that file names changed in this way are re-downloaded every time you re-mirror a site, because <b>wget</b> can't tell that the local <b>X.html</b> file corresponds to remote URL <b>X</b> (since it doesn't yet know that the URL produces output of type <b>text/html</b> or <b>application/xhtml+xml</b>).<br><br> As of version 1.12, <b>wget</b> also ensures that any downloaded files of type <b>text/css</b> end in the suffix <b>.css</b>, and the option was renamed from <b>--html-extension</b>, to better reflect its new behavior. The old option name is still acceptable, but should now be considered deprecated.<br><br> At some point in the future, this option may be expanded to include suffixes for other types of content, including content types that are not parsed by <b>wget</b>.</td>
</tr>
<tr class="tcw">
<td><b>--http-user=</b><i>user</i>,<br><b>--http-passwd=</b><i>password</i></td>
<td>Specify the username <i>user</i> and <i>password</i> on an HTTP server. According to the challenge, <b>wget</b> encodes them using either the "basic" (insecure) or the "digest" authentication scheme.<br><br> Another way to specify username and password is in the URL itself. Either method reveals your password to anyone who bothers to run <a href="/unix/ups.htm"><b>ps</b></a>. To prevent the passwords from being seen, store them in <b>.wgetrc</b> or <b>.netrc</b>, and make sure to protect those files from other users with <a href="/unix/uchmod.htm"><b>chmod</b></a>. If the passwords are important, do not leave them lying in those files either; edit the files and delete them after <b>wget</b> has started the download.</td>
</tr>
<tr class="tcw">
<td><b>--no-cache</b></td>
<td>Disable server-side cache. In this case, <b>wget</b> sends the remote server an appropriate directive (Pragma: <b>no-cache</b>) to get the file from the remote service, rather than returning the cached version. This option is especially useful for retrieving and flushing out-of-date documents on proxy servers.<br><br> Caching is allowed by default.</td>
</tr>
<tr class="tcw">
<td><b>--no-cookies</b></td>
<td>Disable the use of <a href="/jargon/c/cookie.htm">cookies</a>. Cookies are a mechanism for maintaining server-side state. The server sends the client a cookie using the "<b>Set-Cookie</b>" header, and the client responds with the same cookie upon further requests. Since cookies allow the server owners to keep track of visitors and for sites to exchange this information, some consider them a breach of privacy. The default is to use cookies; however, storing cookies is not on by default.</td>
</tr>
<tr class="tcw">
<td><b>--load-cookies</b> <i>file</i></td>
<td>Load cookies from <i>file</i> before the first HTTP retrieval. <i>file</i> is a text file in the format originally used by Netscape's <b>cookies.txt</b> file.<br><br> You often use this option when mirroring sites that require that you be logged in to access some or all their content. The login process works by the web server issuing an HTTP cookie upon receiving and verifying your credentials. The cookie is then resent by the browser when accessing that part of the site, and so proves your identity.<br><br> Mirroring such a site requires <b>wget</b> to send the same cookies your browser sends when communicating with the site. To do this use <b>--load-cookies</b>; point <b>wget</b> to the location of the <b>cookies.txt</b> file, and it sends the same cookies your browser would send in the same situation. Different browsers keep text cookie files in different locations:<br><br>
<table class="mtable3">
<tr class="tcw">
<td style="width:180px"><a href="/jargon/n/netscape.htm">Netscape</a> 4.x</td>
<td>The cookies are in <b>~/.netscape/cookies.txt</b>.</td>
</tr>
<tr class="tcw">
<td><a href="/jargon/m/mozilla.htm">Mozilla</a> and Netscape 6.x</td>
<td>Mozilla's cookie file is also named <b>cookies.txt</b>, located somewhere under <b>~/.mozilla</b>, in the directory of your profile. The full path usually ends up looking somewhat like <b>~/.mozilla/default/some-weird-string/cookies.txt</b>.</td>
</tr>
<tr class="tcw">
<td><a href="/jargon/m/msie.htm">Internet Explorer</a></td>
<td>You can produce a cookie file that <b>wget</b> can utilize using the file menu, Import and Export, Export Cookies. Tested with Internet Explorer 5 (wow, that's old), but it is not guaranteed to work with earlier versions.</td>
</tr>
<tr class="tcw">
<td>other browsers</td>
<td>If you are using a different browser to create your cookies, <b>--load-cookies</b> only works if you can locate or produce a cookie file in the Netscape format that <b>wget</b> expects.</td>
</tr>
</table>
<br>
If you cannot use <b>--load-cookies</b>, there might still be an alternative. If your browser supports a "cookie manager", you can use it to view the cookies used when accessing the site you're mirroring. Write down the name and value of the cookie, and manually instruct <b>wget</b> to send those cookies, bypassing the "official" cookie support:<br>
<br>
<pre class="tcy">wget --no-cookies --header "Cookie: &lt;name&gt;=&lt;value&gt;"</pre>
</td>
</tr>
<tr class="tcw">
<td><b>--save-cookies</b> <i>file</i></td>
<td>Save cookies to <i>file</i> before exiting. This does not save cookies that have expired or that have no expiry time (so-called "session cookies"), but also see <b>--keep-session-cookies</b>.</td>
</tr>
<tr class="tcw">
<td><b>--keep-session-cookies</b></td>
<td>When specified, causes <b>--save-cookies</b> to also save session cookies. Session cookies are normally not saved because they are meant to be kept in memory and forgotten when you exit the browser. Saving them is useful on sites that require you to log in or visit the homepage before you can access some pages. With this option, multiple <b>wget</b> runs are considered a single browser session as far as the site is concerned.<br><br>Since the cookie file format does not normally carry session cookies, <b>wget</b> marks them with an expiry timestamp of <b>0</b>. <b>wget</b>'s <b>--load-cookies</b> recognizes those as session cookies, but it might confuse other browsers. Also, note that cookies so loaded are treated as other session cookies, which means that if you want <b>--save-cookies</b> to preserve them again, you must use <b>--keep-session-cookies</b> again.</td>
</tr>
<tr class="tcw">
<td><b>--ignore-length</b></td>
<td>Unfortunately, some HTTP servers (CGI programs, to be more precise) send out bogus "<b>Content-Length</b>" headers, which makes <b>wget</b> start to bray like a stuck pig, as it thinks not all the document was retrieved. You can spot this syndrome if <b>wget</b> retries getting the same document again and again, each time claiming that the (otherwise normal) connection has closed on the very same byte.<br><br> With this option, <b>wget</b> ignores the "<b>Content-Length</b>" header, as if it never existed.</td>
</tr>
<tr class="tcw">
<td><b>--header=</b><i>header-line</i></td>
<td>Send <i>header-line</i> with the rest of the headers in each HTTP request. The supplied header is sent as-is, which means it must contain name and value separated by colon, and must not contain <a href="/jargon/n/newline.htm">newlines</a>.<br><br> You may define more than one additional header by specifying <b>--header</b> more than once.<br><br><pre class="tcy">wget --header='Accept-Charset: iso-8859-2'  --header='Accept-Language: hr'  http://fly.srk.fer.hr/</pre> Specification of an empty string as the header value clears all previous user-defined headers.<br><br> As of <b>wget</b> 1.10, this option can override headers otherwise generated automatically. This example instructs <b>wget</b> to connect to <a href="/jargon/l/locahost.htm">localhost</a>, but to specify <b>foo.bar</b> in the "<b>Host</b>" header:<br><br><pre class="tcy">wget --header="Host: foo.bar" http://localhost/</pre> In versions of <b>wget</b> before 1.10 such use of <b>--header</b> caused sending of duplicate headers.</td>
</tr>
<tr class="tcw">
<td><b>--max-redirect=</b><i>number</i></td>
<td>Specifies the maximum number of redirections to follow for a resource. The default is 20, which is usually far more than necessary. However, on those occasions where you want to allow more (or fewer), this is the option to use.</td>
</tr>
<tr class="tcw">
<td><b>--proxy-user=</b><i>user</i>,<br><b>--proxy-password=</b><i>password</i></td>
<td>Specify the username <i>user</i> and <i>password</i> for authentication on a proxy server. <b>wget</b> encodes them using the "basic" authentication scheme.<br><br> Security considerations similar to those with <b>--http-password</b> pertain here as well.</td>
</tr>
<tr class="tcw">
<td><b>--referer=</b><i>url</i></td>
<td>Include "<b>Referer: url</b>" header in HTTP request. Useful for retrieving documents with server-side processing that assume they are always being retrieved by interactive web browsers and only come out properly when <b>Referer</b> is set to one of the pages that point to them.</td>
</tr>
<tr class="tcw">
<td><b>--save-headers</b></td>
<td>Save the headers sent by the HTTP server to the file, preceding the actual contents, with an empty line as the separator.</td>
</tr>
<tr class="tcw">
<td><b>-U</b> <i>agent-string</i>,<br><b>--user-agent=</b><i>agent-string</i></td>
<td>Identify as <i>agent-string</i> to the HTTP server.<br><br> The HTTP protocol allows the clients to identify themselves using a "<b>User-Agent</b>" header field. This enables distinguishing the WWW software, usually for statistical purposes or for tracing of protocol violations. <b>wget</b> normally identifies as "<b>Wget/</b><i>version</i>", <i>version</i> being the current version number of <b>wget</b>.<br><br> However, some sites are known to impose the policy of tailoring the output according to the "<b>User-Agent</b>"-supplied information. While this is not such a bad idea in theory, it is abused by servers denying information to clients other than (historically) Netscape or, more frequently, Microsoft Internet Explorer. This option allows you to change the "<b>User-Agent</b>" line issued by <b>wget</b>. Use of this option is discouraged, unless you know what you are doing.<br><br> Specifying empty user agent with <b>--user-agent=""</b> instructs <b>wget</b> not to send the "<b>User-Agent</b>" header in HTTP requests.</td>
</tr>
<tr class="tcw">
<td><b>--post-data=</b><i>string</i>,<br><b>--post-file=</b><i>file</i></td>
<td>Use <b>POST</b> as the method for all HTTP requests and send the specified data in the request body. <b>--post-data</b> sends <i>string</i> as data, whereas <b>--post-file</b> sends the contents of <i>file</i>. Other than that, they work in the same way. In particular, they both expect content of the form "<b>key1=value1&amp;key2=value2</b>", with percent-encoding for special characters; the only difference is that one expects its content as a command-line parameter and the other accepts its content from a file. In particular, <b>--post-file</b> is not for transmitting files as form attachments: those must appear as "<b>key=value</b>" data (with appropriate percent-coding) like everything else. <b>wget</b> does not currently support "<b>multipart/form-data</b>" for transmitting <b>POST</b> data; only "<b>application/x-www-form-urlencoded</b>". Only one of <b>--post-data</b> and <b>--post-file</b> should be specified.<br><br> Please be aware that <b>wget</b> needs to know the size of the <b>POST</b> data in advance. Therefore the argument to "<b>--post-file</b>" must be a regular file; specifying a <a href="/jargon/f/fifo.htm">FIFO</a> or something like <b>/dev/stdin</b> won't work. It's not quite clear how to work around this limitation inherent in HTTP/1.0. Although HTTP/1.1 introduces chunked transfer that doesn't require knowing the request length in advance, a client can't use chunked unless it knows it's talking to an HTTP/1.1 server. And it can't know that until it receives a response, which in turn requires the request to be completed, which is sort of a chicken-and-egg problem.<br><br> Note that if <b>wget</b> is redirected after the POST request is completed, it does not send the POST data to the redirected URL. Because URLs that process POST often respond with a redirection to a regular page, which does not desire or accept POST. It is not completely clear that this behavior is optimal; if it doesn't work out, it might be changed in the future.<br><br> This example shows how to log to a server using POST and then proceed to download the desired pages, presumably only accessible to authorized users. First, we log in to the server.<br><br><pre class="tcy">wget --save-cookies cookies.txt --post-data  'user=foo&amp;password=bar' http://server.com/auth.php</pre> And then we grab the page (or pages) we care about:<br><br><pre class="tcy">wget --load-cookies cookies.txt  -p http://server.com/interesting/article.php</pre> If the server uses session cookies to track user authentication, the above does not work because <b>--save-cookies</b> does not save them (and neither do browsers) and the <b>cookies.txt</b> file is empty. In that case use <b>--keep-session-cookies</b> along with <b>--save-cookies</b> to force saving of session cookies.</td>
</tr>
<tr class="tcw">
<td><b>--content-disposition</b></td>
<td>If this is set, experimental (not fully-functional) support for "<b>Content-Disposition</b>" headers is enabled. This option can currently result in extra round-trips to the server for a "<b>HEAD</b>" request, and is known to suffer from a few bugs, which is why it is not currently enabled by default.<br><br> This option is useful for some file-downloading CGI programs that use "<b>Content-Disposition</b>" headers to describe what the name of a downloaded file should be.</td>
</tr>
<tr class="tcw">
<td><b>--trust-server-names</b></td>
<td>If this is set on a redirect, the last component of the redirection URL is used as the local file name. By default, it is used the last component in the original URL.</td>
</tr>
<tr class="tcw">
<td><b>--auth-no-challenge</b></td>
<td>If this option is given, <b>wget</b> sends Basic HTTP authentication information (plaintext username and password) for all requests, like <b>wget</b> 1.10.2 and prior did by default.<br><br> Use of this option is not recommended, and is intended only to support some few obscure servers, which never send HTTP authentication challenges, but accept unsolicited auth info, say, in addition to form-based authentication.</td>
</tr>
</table>
<h2 id="https">HTTPS (SSL/TLS) options</h2>
<p class="tab">To support <a href="/jargon/e/encrypt.htm">encrypted</a> HTTP (<a href="/jargon/h/http.htm">HTTPS</a>) downloads, <b>wget</b> must be compiled with an external <a href="/jargon/s/ssl.htm">SSL</a> library, currently OpenSSL. If <b>wget</b> is <a href="/jargon/c/compile.htm">compiled</a> without SSL support, none of these options are available.</p>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:270px"><b>--secure-protocol=</b><i>protocol</i></td>
<td>Choose the secure protocol to be used. Legal values are <b>auto</b>, <b>SSLv2</b>, <b>SSLv3</b>, and <b>TLSv1</b>. If <b>auto</b> is used, the SSL library is given the liberty of choosing the appropriate protocol automatically, which is achieved by sending an SSLv2 greeting and announcing support for SSLv3 and TLSv1, which the default.<br><br> Specifying SSLv2, SSLv3, or TLSv1 forces the use of the corresponding protocol. This option is useful when talking to old and buggy SSL server implementations that make it hard for OpenSSL to choose the correct protocol version. Fortunately, such servers are quite rare.</td>
</tr>
<tr class="tcw">
<td><b>--no-check-certificate</b></td>
<td>Don't check the server certificate against the available certificate authorities. Also, don't require the URL hostname to match the common name presented by the certificate.<br><br> As of <b>wget</b> 1.10, the default is to verify the server's certificate against the recognized certificate authorities, breaking the SSL handshake and aborting the download if the verification fails. Although this provides more secure downloads, it does break interoperability with some sites that worked with previous <b>wget</b> versions, particularly those using self-signed, expired, or otherwise invalid certificates. This option forces an "insecure" mode of operation that turns the certificate verification errors into warnings and allows you to proceed.<br><br> If you encounter "certificate verification" errors or ones saying that "common name doesn't match requested hostname", you can use this option to bypass the verification and proceed with the download. Only use this option if you are otherwise convinced of the site's authenticity, or if you don't care about the validity of its certificate. It is often a bad idea not to check the certificates when transmitting confidential or important data.</td>
</tr>
<tr class="tcw">
<td><b>--certificate=</b><i>file</i></td>
<td>Use the client certificate stored in <i>file</i>. This information is needed for servers that are configured to require certificates from the clients that connect to them. Normally a certificate is not required and this switch is optional.</td>
</tr>
<tr class="tcw">
<td><b>--certificate-type=</b><i>type</i></td>
<td>Specify the type of the client certificate. Legal values are PEM (assumed by default) and DER, also known as ASN1.</td>
</tr>
<tr class="tcw">
<td><b>--private-key=</b><i>file</i></td>
<td>Read the private key from <i>file</i>. This option allows you to provide the private key in a file separate from the certificate.</td>
</tr>
<tr class="tcw">
<td><b>--private-key-type=</b><i>type</i></td>
<td>Specify the <i>type</i> of the private key. Accepted values are PEM (the default) and DER.</td>
</tr>
<tr class="tcw">
<td><b>--ca-certificate=</b><i>file</i></td>
<td>Use <i>file</i> as the file with the bundle of certificate authorities ("CA") to verify the peers. The certificates must be in PEM format.<br><br> Without this option <b>wget</b> looks for CA certificates at the system-specified locations, chosen at OpenSSL installation time.</td>
</tr>
<tr class="tcw">
<td><b>--ca-directory=</b><i>directory</i></td>
<td>Specifies directory containing CA certificates in PEM format. Each file contains one CA certificate, and the file name is based on a <a href="/jargon/h/hash.htm">hash</a> value derived from the certificate. This is achieved by processing a certificate directory with the "<b>c_rehash</b>" utility supplied with OpenSSL. Using <b>--ca-directory</b> is more efficient than <b>--ca-certificate</b> when many certificates are installed because it allows Wget to fetch certificates on demand.<br><br> Without this option <b>wget</b> looks for CA certificates at the system-specified locations, chosen at OpenSSL installation time.</td>
</tr>
<tr class="tcw">
<td><b>--random-file=</b><i>file</i></td>
<td>Use <i>file</i> as the source of random data for seeding the <a href="/jargon/p/pseudo-random.htm">pseudorandom</a> number generator on systems without <b>/dev/random</b>.<br><br> On such systems the SSL library needs an external source of randomness to initialize. Randomness may be provided by EGD (see <b>--egd-file</b> below) or read from an external source specified by the user. If this option is not specified, <b>wget</b> looks for random data in <b>$RANDFILE</b> or, if that is unset, in <b>$HOME/.rnd</b>. If none of those are available, it is likely that SSL encryption is not usable.<br><br> If you're getting the "Could not seed OpenSSL PRNG; disabling SSL" error, provide random data using some of the methods described above.</td>
</tr>
<tr class="tcw">
<td><b>--egd-file=</b><i>file</i></td>
<td>Use file as the EGD socket. EGD stands for Entropy Gathering Daemon, a user-space program that collects data from various unpredictable system sources and makes it available to other programs that might need it. Encryption software, such as the SSL library, needs sources of non-repeating randomness to seed the random number generator used to produce cryptographically strong keys.<br><br> OpenSSL allows the user to specify his own source of entropy using the "RAND_FILE" environment variable. If this variable is unset, or if the specified file does not produce enough randomness, OpenSSL reads random data from EGD socket specified using this option.<br><br> If this option is not specified (and the equivalent startup command is not used), EGD is never contacted. EGD is not needed on modern Unix systems that support <b>/dev/random</b>.</td>
</tr>
</table>
<h2 id="ftp">FTP options</h2>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:250px"><b>--ftp-user=</b><i>user</i>,<br><b>--ftp-password=</b><i>password</i></td>
<td>Specify the username <i>user</i> and <i>password</i> on an FTP server. Without this, or the corresponding startup option, the password defaults to <b><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="dff2a8b8baab9f">[email&#160;protected]</a></b>, normally used for anonymous FTP.<br><br> Another way to specify username and password is in the URL itself. Either method reveals your password to anyone who bothers to run <a href="/unix/ups.htm"><b>ps</b></a>. To prevent the passwords from being seen, store them in <b>.wgetrc</b> or <b>.netrc</b>, and make sure to protect those files from other users with <a href="/unix/uchmod.htm"><b>chmod</b></a>. If the passwords are important, do not leave them lying in those files either; edit the files and delete them after <b>wget</b> has started the download.</td>
</tr>
<tr class="tcw">
<td><b>--no-remove-listing</b></td>
<td>Don't remove the temporary <b>.listing</b> files generated by FTP retrievals. Normally, these files contain the raw directory listings received from FTP servers. Not removing them can be useful for debugging purposes, or when you want to be able to easily check on the contents of remote server directories (e.g., to verify that a mirror you're running is complete).<br><br> Note that even though <b>wget</b> writes to a known file name for this file, this is not a security hole in the scenario of a user making <b>.listing</b> a <a href="/jargon/s/symblink.htm">symbolic link</a> to <b>/etc/passwd</b> or something and asking root to run <b>wget</b> in his or her directory. Depending on the options used, either <b>wget</b> refuses to write to <b>.listing</b>, making the globbing/recursion/time-stamping operation fail, or the symbolic link is deleted and replaced with the actual .listing file, or the listing is written to a .listing.number file.<br><br> Even though this situation isn't a problem, though, root should never run <b>wget</b> in a non-trusted user's directory. A user could do something as simple as linking <b>index.html</b> to <b>/etc/passwd</b> and asking root to run <b>wget</b> with <b>-N</b> or <b>-r</b> so the file is overwritten.</td>
</tr>
<tr class="tcw">
<td><b>--no-glob</b></td>
<td>Turn off FTP <a href="/jargon/g/glob.htm">globbing</a>. Globbing refers to the use of shell-like special characters (<a href="/jargon/w/wildcard.htm">wildcards</a>), like <b>*</b>, <b>?</b>, <b>[</b> and <b>]</b> to retrieve more than one file from the same directory at once, like:<br><br><pre class="tcy">wget ftp://gnjilux.srk.fer.hr/*.msg</pre> By default, globbing is turned on if the URL contains a globbing character. This option may be used to turn globbing on or off permanently.<br><br> You may have to quote the URL to protect it from being expanded by your <a href="/jargon/s/shell.htm">shell</a>. Globbing makes <b>wget</b> look for a directory listing, which is system-specific. This is why it currently works only with Unix FTP servers (and the ones emulating Unix <a href="/unix/uls.htm"><b>ls</b></a> output).</td>
</tr>
<tr class="tcw">
<td><b>--no-passive-ftp</b></td>
<td>Disable the use of the passive FTP transfer mode. Passive FTP mandates that the client connect to the server to establish the data connection rather than the other way around.<br><br> If the machine is connected to the Internet directly, both passive and active FTP should work equally well. Behind most <a href="/jargon/f/firewall.htm">firewall</a> and <a href="/jargon/n/nat.htm">NAT</a> configurations passive FTP has a better chance of working. However, in some rare firewall configurations, active FTP actually works when passive FTP doesn't. If you suspect this to be the case, use this option, or set "<b>passive_ftp=off</b>" in your init file.</td>
</tr>
<tr class="tcw">
<td><b>--retr-symlinks</b></td>
<td>Usually, when retrieving FTP directories recursively and a <a href="/jargon/s/symblink.htm">symbolic link</a> is encountered, the linked-to file is not downloaded. Instead, a matching symbolic link is created on the local filesystem. The pointed-to file is not downloaded unless this recursive retrieval would have encountered it separately and still downloaded it.<br><br> When <b>--retr-symlinks</b> is specified, however, symbolic links are traversed and the pointed-to files are retrieved. At this time, this option does not cause <b>wget</b> to traverse symlinks to directories and recurse through them, but in the future it should be enhanced to do this.<br><br> Note that when retrieving a file (not a directory) because it was specified on the command-line, rather than because it was recursed to, this option has no effect. Symbolic links are always traversed in this case.</td>
</tr>
</table>
<h2 id="retrieval">Recursive retrieval options</h2>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:240px"><b>-r</b>, <b>--recursive</b></td>
<td>Turn on <a href="/jargon/r/recursive.htm">recursive</a> retrieving.</td>
</tr>
<tr class="tcw">
<td><b>-l</b> <i>depth</i>, <b>--level=</b><i>depth</i></td>
<td>Specify recursion maximum depth level <i>depth</i>. The default maximum <i>depth</i> is <b>5</b>.</td>
</tr>
<tr class="tcw">
<td><b>--delete-after</b></td>
<td>This option tells <b>wget</b> to delete every single file it downloads, after having done so. It is useful for pre-fetching popular pages through a proxy, e.g.:<br><br><pre class="tcy">wget -r -nd --delete-after http://whatever.com/~popular/page/</pre> The <b>-r</b> option is to retrieve recursively, and <b>-nd</b> to not create directories.<br><br> Note that <b>--delete-after</b> deletes files on the local machine. It does not issue the <b>DELE</b> FTP command to remote FTP sites, for instance. Also, note that when <b>--delete-after</b> is specified, <b>--convert-links</b> is ignored, so <b>.orig</b> files are not created in the first place. </td>
</tr>
<tr class="tcw">
<td><b>-k</b>, <b>--convert-links</b></td>
<td>After the download is complete, convert the links in the document to make them suitable for local viewing. This affects not only the visible hyperlinks, but any part of the document that links to external content, such as embedded images, links to style sheets, hyperlinks to non-HTML content, etc. Note that when <b>--output-document</b> is specified, <b>--convert-links</b> is ignored. Each link is changed in one of the two ways:<br><br> 1. The links to files that were downloaded by <b>wget</b> are changed to refer to the file they point to as a relative link. Example: if the downloaded file <b>/foo/doc.html</b> links to <b>/bar/img.gif</b>, also downloaded, then the link in <b>doc.html</b> is modified to point to <b>../bar/img.gif</b>. This kind of transformation works reliably for arbitrary combinations of directories.<br><br> 2. The links to files that were not downloaded by <b>wget</b> are changed to include hostname and absolute path of the location they point to. Example: if the downloaded file <b>/foo/doc.html</b> links to <b>/bar/img.gif</b> (or <b>../bar/img.gif</b>), then the link in <b>doc.html</b> is modified to point to <b>http://hostname/bar/img.gif</b>.<br><br> Because of this, local browsing works reliably: if a linked file was downloaded, the link refers to its local name; if it was not downloaded, the link refers to its full Internet address rather than presenting a broken link. The fact that the former links are converted to relative links ensures that you can move the downloaded hierarchy to another directory.<br><br> Note that only at the end of the download can <b>wget</b> know which links were downloaded. Because of that, the work done by <b>-k</b> is performed at the end of all the downloads.</td>
</tr>
<tr class="tcw">
<td><b>-K</b>, <b>--backup-converted</b></td>
<td>When converting a file, backup the original version with an <b>.orig</b> suffix. Affects the behavior of <b>-N</b>.</td>
</tr>
<tr class="tcw">
<td><b>-m</b>, <b>--mirror</b></td>
<td>Turn on options suitable for mirroring. This option turns on recursion and time-stamping, sets infinite recursion depth and keeps FTP directory listings. It is currently equivalent to <b>-r -N -l inf -nr</b>.</td>
</tr>
<tr class="tcw">
<td><b>-p</b>, <b>--page-requisites</b></td>
<td>This option causes <b>wget</b> to download all the files that are necessary to properly display a given HTML page. Including such things as inlined images, sounds, and referenced stylesheets. Ordinarily, when downloading a single HTML page, any requisite documents that may be needed to display it properly are not downloaded. Using <b>-r</b> together with <b>-l</b> can help, but since <b>wget</b> does not ordinarily distinguish between external and inlined documents, one is generally left with "leaf documents'' that are missing their requisites.<br><br> For instance, say document <b>1.html</b> contains an <b>&lt;IMG&gt;</b> tag referencing <b>1.gif</b> and an <b>&lt;A&gt;</b> tag pointing to external document <b>2.html</b>. Say that <b>2.html</b> is similar but that its image is <b>2.gif</b> and it links to <b>3.html</b>. Say this continues up to some arbitrarily high number.<br><br> If one executes the command:<br><br><pre class="tcy">wget -r -l 2 http://&lt;site&gt;/1.html</pre> then <b>1.html</b>, <b>1.gif</b>, <b>2.html</b>, <b>2.gif</b>, and <b>3.html</b> is downloaded. As you can see, <b>3.html</b> is without its requisite <b>3.gif</b> because <b>wget</b> is counting the number of hops (up to 2) away from <b>1.html</b> to determine where to stop the recursion. However, with this command:<br><br><pre class="tcy">wget -r -l 2 -p http://&lt;site&gt;/1.html</pre> all the files above and <b>3.html</b>'s requisite <b>3.gif</b> are downloaded. Similarly,<br><br><pre class="tcy">wget -r -l 1 -p http://&lt;site&gt;/1.html</pre> causes <b>1.html</b>, <b>1.gif</b>, <b>2.html</b>, and <b>2.gif</b> to be downloaded. One might think that:<br><br><pre class="tcy">wget -r -l 0 -p http://&lt;site&gt;/1.html</pre> would download only <b>1.html</b> and <b>1.gif</b>, but unfortunately this is not the case, because <b>-l 0</b> is equivalent to <b>-l inf</b>; that is, infinite recursion. To download a single HTML page (or a handful of them, all specified on the command-line or in a <b>-i</b> URL input file) and its (or their) requisites, leave off <b>-r</b> and <b>-l</b>:<br><br><pre class="tcy">wget -p http://&lt;site&gt;/1.html</pre> Note that <b>wget</b> behaves as if <b>-r</b> had been specified, but only that single page and its requisites are downloaded. Links from that page to external documents are not followed. Actually, to download a single page and all its requisites (even if they exist on separate websites), and make sure the lot displays properly locally, this author likes to use a few options in addition to <b>-p</b>:<br><br><pre class="tcy">wget -E -H -k -K -p http://&lt;site&gt;/&lt;document&gt;</pre> To finish off this topic, it's worth knowing that <b>wget</b>'s idea of an external document link is any URL specified in an <b>&lt;A&gt;</b> tag, an <b>&lt;AREA&gt;</b> tag, or a <b>&lt;LINK&gt;</b> tag other than"<b>&lt;LINK REL="stylesheet"&gt;</b>. </td>
</tr>
<tr class="tcw">
<td><b>--strict-comments</b></td>
<td>Turn on strict parsing of HTML comments. The default is to terminate comments at the first occurrence of <b>--&gt;</b>.<br><br> According to specifications, HTML comments are expressed as <a href="/jargon/s/sgml.htm">SGML</a> declarations. Declaration is special markup that begins with <b>&lt;!</b> and ends with <b>&gt;</b>, such as <b>&lt;!DOCType ...&gt;</b>, that may contain comments between a pair of <b>--</b> <a href="/jargon/d/delimite.htm">delimiters</a>. HTML <a href="/jargon/c/comment.htm">comments</a> are "empty declarations", SGML declarations without any non-comment text. Therefore, <b>&lt;!--foo--&gt;</b> is a valid comment, and so is <b>&lt;!--one-- --two--&gt;</b>, but <b>&lt;!--1--2--&gt;</b> is not.<br><br> On the other hand, most HTML writers don't perceive comments as anything other than text delimited with <b>&lt;!-- and --&gt;</b>, which is not quite the same. For example, something like <b>&lt;!------------&gt;</b> works as a valid comment as long as the number of dashes is a multiple of four. If not, the comment technically lasts until the next <b>--</b>, which may be at the other end of the document. Because of this, many popular browsers completely ignore the specification and implement what users have come to expect: comments delimited with <b>&lt;!-- and --&gt;</b>.<br><br> Until version 1.9, <b>wget</b> interpreted comments strictly, which resulted in missing links in many web pages that displayed fine in browsers, but had the misfortune of containing non-compliant comments. Beginning with version 1.9, <b>wget</b> has joined the ranks of clients that implements "na&iuml;ve'' comments, terminating each comment at the first occurrence of <b>--&gt;</b>.<br><br> If, for whatever reason, you want strict comment <a href="/jargon/p/parse.htm">parsing</a>, use this option to turn it on.</td>
</tr>
</table>
<h2 id="accept-reject">Recursive accept/reject options</h2>
<table class="mtable4 tab">
<tr class="tcw">
<td style="width:300px"><b>-A</b> <i>acclist</i>, <b>--accept</b> <i>acclist</i>;<br><b>-R</b> <i>rejlist</i>, <b>--reject</b> <i>rejlist</i></td>
<td>Specify comma-separated lists of file name suffixes or patterns to accept or reject. Note that if any of the wildcard characters, <b>*</b>, <b>?</b>, <b>[</b> or <b>]</b>, appear in an element of <i>acclist</i> or <i>rejlist</i>, it is treated as a pattern, rather than a suffix.</td>
</tr>
<tr class="tcw">
<td><b>-D</b> <i>domain-list</i>,<br><b>--domains=</b><i>domain-list</i></td>
<td>Set domains to be followed. <i>domain-list</i> is a comma-separated list of domains. Note that it does not turn on <b>-H</b>.</td>
</tr>
<tr class="tcw">
<td><b>--exclude-domains</b> <i>domain-list</i></td>
<td>Specify the domains that are not to be followed.</td>
</tr>
<tr class="tcw">
<td><b>--follow-ftp</b></td>
<td>Follow FTP links from HTML documents. Without this option, <b>wget</b> ignores all the FTP links.</td>
</tr>
<tr class="tcw">
<td><b>--follow-tags=</b><i>list</i></td>
<td><b>wget</b> has an internal table of HTML tag/attribute pairs that it considers when looking for linked documents during a recursive retrieval. If a user wants only a subset of those tags to be considered, however, he or she should be specify such tags in a comma-separated list with this option.</td>
</tr>
<tr class="tcw">
<td><b>--ignore-tags=</b><i>list</i></td>
<td>This option is the opposite of the <b>--follow-tags</b> option. To skip certain HTML tags when recursively looking for documents to download, specify them in a comma-separated list.<br><br> In the past, this option was the best bet for downloading a single page and its requisites, using a command-line like:<br><br><pre class="tcy">wget --ignore-tags=a,area -H -k -K -r http://&lt;site&gt;/&lt;document&gt;</pre> However, the author of this option came across a page with tags like "<b>&lt;LINK REL="home" HREF="/"&gt;</b>" and came to the realization that specifying tags to ignore was not enough. One can't tell <b>wget</b> to ignore "<b>&lt;LINK&gt;</b>", because then stylesheets are not downloaded. Now the best bet for downloading a single page and its requisites is the dedicated <b>--page-requisites</b> option. </td>
</tr>
<tr class="tcw">
<td><b>--ignore-case</b></td>
<td>Ignore case when matching files and directories. This influences the behavior of <b>-R</b>, <b>-A</b>, <b>-I</b>, and <b>-X</b> options, and globbing implemented when downloading from FTP sites. For example, with this option, <b>-A *.txt</b> matches <b>file1.txt</b>, but also <b>file2.TXT</b>, <b>file3.TxT</b>, etc.</td>
</tr>
<tr class="tcw">
<td><b>-H</b><b>--span-hosts</b></td>
<td>Enable spanning across hosts when doing recursive retrieving.</td>
</tr>
<tr class="tcw">
<td><b>-L</b><b>--relative</b></td>
<td>Follow relative links only. Useful for retrieving a specific homepage without any distractions, not even those from the same hosts.</td>
</tr>
<tr class="tcw">
<td><b>-I</b> <i>list</i>,<br><b>--include-directories=</b><i>list</i></td>
<td>Specify a comma-separated list of directories you want to follow when downloading. Elements of <i>list</i> may contain wildcards.</td>
</tr>
<tr class="tcw">
<td><b>-X</b> <i>list</i>,<br><b>--exclude-directories=</b><i>list</i></td>
<td>Specify a comma-separated list of directories you want to exclude from download. Elements of <i>list</i> may contain wildcards.</td>
</tr>
<tr class="tcw">
<td><b>-np</b>, <b>--no-parent</b></td>
<td>Do not ever ascend to the parent directory when retrieving recursively. This option is a useful option, as it guarantees that only the files below a certain hierarchy are downloaded.</td>
</tr>
</table>
<h2 id="files">Files</h2>
<table class="mtable3 tab">
<tr class="tcw">
<td style="width:140px"><b>/etc/wgetrc</b></td>
<td>Default location of the global startup file.</td>
</tr>
<tr class="tcw">
<td><b>.wgetrc</b></td>
<td>User startup file.</td>
</tr>
</table>
<h2 id="examples">Examples</h2>
<pre class="tcy tab">wget https://www.computerhope.com/</pre>
<p class="tab">Download the default homepage file (index.htm) from <b>www.computerhope.com</b>. The file is saved to the working directory.</p>
<pre class="tcy tab">wget --limit-rate=200k http://www.example.org/files/archive.zip</pre>
<p class="tab">Download the file <b>archive.zip</b> from <b>www.example.org</b>, and limit bandwidth usage of the download to <b>200k/s</b>.</p>
<pre class="tcy tab">wget -c http://www.example.org/files/archive.zip</pre>
<p class="tab">Download <b>archive.zip</b> from <b>example.org</b>, and if a partial download exists in the current directory, resume the download where it left off.</p>
<pre class="tcy tab">wget -b http://www.example.org/files/archive.zip</pre>
<p class="tab">Download <b>archive.zip</b> in the background, returning you to the command prompt in the interim.</p>
<pre class="tcy tab">wget --spider http://www.example.org/files/archive.zip</pre>
<p class="tab">Uses "web spider" mode to check if a remote file exists. Output resembles the following:</p>
<pre class="tab">Spider mode enabled. Check if remote file exists.
HTTP request sent, awaiting response... 200 OK
Length: 1206 (1.2K) [application/zip]
Remote file exists.</pre>
<pre class="tcy tab">wget --mirror -p --convert-links -P ./example-mirror http://www.example.org</pre>
<p class="tab">Download a complete mirror of the website <b>www.example.org</b> to the folder <b>./example-mirror</b> for local viewing.</p>
<pre class="tcy tab">wget -Q5m http://www.example.org/files/archive.zip</pre>
<p class="tab">Stop downloading <b>archive.zip</b> once five megabytes are successfully transferred. This transfer can then later be resumed using the <b>-c</b> option.</p>
<h2 id="related">Related commands</h2>
<p class="tab"><a href="/unix/curl.htm"><b>curl</b></a> &mdash; Transfer data to or from a server.</p>
</article>
<div class="bottomad" aria-hidden="true">
<ins class="adsbygoogle" data-ad-client="ca-pub-3999293766533555" data-ad-format="auto" data-ad-slot="6514780129" style="display:block"></ins>
<script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
</div>
<aside><div id="meta_wrap" class="cf"><ul class="options cf"><li class="useful-page"><span class="nolink">Was this page useful?</span><a href="/cgi-bin/feedback.cgi?yes" class="first-child" rel="nofollow">Yes</a><a href="/cgi-bin/feedback.cgi?no" rel="nofollow">No</a></li><li><ul><li class="feedback"><a href="/feedback/" rel="nofollow" title="Give us your feedback about this page">Feedback</a></li><li class="email"><a href="/contact/" rel="nofollow" title="E-mail Computer Hope">E-mail</a></li><li class="share"><a href="/share/" rel="nofollow" title="Share this page with friends and social networks">Share</a></li><li class="first-child print"><a href="#" onclick="window.print();return false;" rel="nofollow" title="Print a copy of this page">Print</a></li></ul></li></ul></div></aside>
</div>
<footer><form action="https://www.computerhope.com/cgi-bin/search.cgi" role="search" method="post" class="cf"><input class="sbar" name="q" aria-label="search" type="text" /><button type="Submit">Search</button></form><div role="navigation" aria-label="footer"><ul class="cf"><li class="recent-pages"><ol><li class="ftitle">Recently added pages</li><li id="ra1"></li><li id="ra2"></li><li id="ra3"></li><li id="ra4"></li><li id="ra5"></li><li><a href="/whatnew.htm">View all recent updates</a></li></ol></li><li class="useful-links"><ol><li class="ftitle">Useful links</li><li><a href="/more.htm">About Computer Hope</a></li><li><a href="/sindex.htm">Site Map</a></li><li><a href="/forum/">Forum</a></li><li><a href="/contact/">Contact Us</a></li><li><a href="/issues/ch000586.htm">How to Help</a></li><li><a href="/chtop10.htm">Top 10 pages</a></li></ol></li><li class="social-networks"><ol><li class="ftitle">Follow us</li><li><a href="https://www.facebook.com/computerhope/" class="facebook">Facebook</a></li><li><a href="https://twitter.com/computerhope/" class="twitter">Twitter</a></li><li><a href="https://www.pinterest.com/computerhope/" class="pinterest">Pinterest</a></li><li><a href="https://www.youtube.com/user/Computerhope/" class="youtube">YouTube</a></li><li><a href="/rss.htm" class="rss">RSS</a></li></ol></li></ul></div><div class="copyright"><a href="/"><span class="blogo" title="Computer Hope home page" aria-hidden="true"></span><span class="sr">Computer Hope home page</span></a>&copy; 2022 Computer Hope<br><a href="/legal.htm" class="legal">Legal Disclaimer - Privacy Statement</a></div></footer>
</div>
<script async src="https://www.computerhope.com/ch.js"></script>
<div id="tt" aria-hidden="true"></div>
<script>(function(){var js = "window['__CF$cv$params']={r:'740a837cabffc3e3',m:'uCs0wNLWsWkd1KHHqTvMy66S95szLZ4X3MEHeOLgkCQ-1661495372-0-AR0BABG2LWNQTyReTq/2qlpefnstlza+dMHvL9tJCP4UQEJw5ArIk9ML5V7CNJlmhPbIqfp9QAuMY5EOJ09FEVOioITiXhpdAPRKzq2QH9VFei3/KwUTDsua2qTH8J5KNw==',s:[0xcc20ec675f,0xed2da54040],u:'/cdn-cgi/challenge-platform/h/b'};var now=Date.now()/1000,offset=14400,ts=''+(Math.floor(now)-Math.floor(now%offset)),_cpo=document.createElement('script');_cpo.nonce='',_cpo.src='/cdn-cgi/challenge-platform/h/b/scripts/alpha/invisible.js?ts='+ts,document.getElementsByTagName('head')[0].appendChild(_cpo);";var _0xh = document.createElement('iframe');_0xh.height = 1;_0xh.width = 1;_0xh.style.position = 'absolute';_0xh.style.top = 0;_0xh.style.left = 0;_0xh.style.border = 'none';_0xh.style.visibility = 'hidden';document.body.appendChild(_0xh);function handler() {var _0xi = _0xh.contentDocument || _0xh.contentWindow.document;if (_0xi) {var _0xj = _0xi.createElement('script');_0xj.nonce = '';_0xj.innerHTML = js;_0xi.getElementsByTagName('head')[0].appendChild(_0xj);}}if (document.readyState !== 'loading') {handler();} else if (window.addEventListener) {document.addEventListener('DOMContentLoaded', handler);} else {var prev = document.onreadystatechange || function () {};document.onreadystatechange = function (e) {prev(e);if (document.readyState !== 'loading') {document.onreadystatechange = prev;handler();}};}})();</script></body>
</html>